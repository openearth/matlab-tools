function nc_cf_stationtimeseries2kmloverview(metadatadatabase,varargin)
%NC_CF_STATIONTIMESERIES2KMLOVERVIEW   make kml file with links to all waterbase files in a folder on OPeNDAP server
%
%     timeseries2kmloverview(metadatadatabase,<keyword,value>)
%
%  where metadatadatabase is the excel file generated by 
%  NC_CF_STATIONTIMESERIES2META.
%  where you can use the foloing to see the <keyword,value> pairs:
%
%     OPT = timeseries2kmloverview()
%
%See also: vaklodingen_overview, jarkus_grids_overview

% TO DO: allow for more types of metadatadatabase:
%        mysql, netcdf file in opendap itself, csv file, opendap catalog.xml

%% set options
OPT.fileName    = [];
OPT.kmlName     = 'tst.kml';
OPT.THREDDSbase = 'http://opendap.deltares.nl:8080/thredds/catalog/opendap/';
OPT.HYRAXbase   = 'http://opendap.deltares.nl:8080/opendap/';
OPT.ftpbase     = [];
OPT.description = 'test kml generated by OpenEarth';

OPT.lineWidth   = 1;
OPT.lineColor   = [0 0 0];
OPT.lineAlpha   = 1;
OPT.openInGE    = false;
OPT.reversePoly = false;
OPT.text        = '';

OPT = setProperty(OPT,varargin{:});

%% get meta data
if strcmpi(fileext(metadatadatabase),'.xls')
   D = xls2struct(metadatadatabase);
else
   error('database type not implemented, only xls for now')
   % * opendap_folder_contents etc
   % * matroos type mysql database
   % * catalog.nc on opendap server ?
end

%% start KML
OPT.fid=fopen(OPT.fileName,'w');

%% HEADER
OPT_header = struct(...
    'name',OPT.kmlName,...
    'open',0);
output = KML_header(OPT_header);

%% STYLE
OPT_style = struct(...
    'name',['style' num2str(1)],...
    'lineColor',OPT.lineColor(1,:) ,...
    'lineAlpha',OPT.lineAlpha(1),...
    'lineWidth',OPT.lineWidth(1));
output = [output KML_style(OPT_style)];

%% marker BallonStyle
output = [output ...
    '<Style id="normalState">\n'...
    '  <IconStyle><scale>0.7</scale><Icon><href>\n'...
    '  http://maps.google.com/mapfiles/kml/shapes/placemark_square.png\n'...
    '  </href></Icon></IconStyle>\n'...
    '  <LabelStyle><scale>0</scale></LabelStyle>\n'...
    '  </Style>\n'...
    '<Style id="highlightState">\n'...
    '  <IconStyle><Icon><href>\n'...
    '  http://maps.google.com/mapfiles/kml/shapes/placemark_square.png\n'...
    '  </href></Icon></IconStyle>\n'...
    '  <BalloonStyle>\n'...
    '  <text><![CDATA[<h3>$[name]</h3>\n'...
    '  $[description]<hr /><br />Provided by:\n'...
    '  <img src="https://public.deltares.nl/download/attachments/16876019/OET?version=1" align="right" width="100"/>]]></text>\n'...
    '  </BalloonStyle></Style>\n'...
    '<StyleMap id="MarkerBalloonStyle">\n'...
    '  <Pair><key>normal</key><styleUrl>#normalState</styleUrl></Pair> \n'...
    '  <Pair><key>highlight</key><styleUrl>#highlightState</styleUrl></Pair> \n'...
    '  </StyleMap>\n'];
    
%% labels
output = [output, '<Folder>'];
output = [output, '<Name>Outlines</Name>'];

%% generate markers

%tableContents

for ii=1:length(D.lat)
    %disp(sprintf('writing coordinates: % 2d / %d',ii,length(D.lat)));
    
    % generate table with data info
    tableContents = [];
                   tableContents = [tableContents sprintf([...
                       '<tr><td>station name:</td><td>%s</td></tr>'...
                       '<tr><td>station code:</td><td>%s</td></tr>'...
                       '<tr><td>lon:         </td><td>%g</td></tr>'...
                       '<tr><td>lat:         </td><td>%g</td></tr>'...
                       '<tr><td># times:     </td><td>%g</td></tr>'...
                       '<tr><td>1st time:    </td><td>%s</td></tr>'...
                       '<tr><td>last time:   </td><td>%s</td></tr>',...
                       '<tr><td>meta-info:   </td><td><a href="%s">THREDDS server</a></td></tr>'...%link to timeseries
                       '<tr><td>meta-info:   </td><td><a href="%s">HYRAX   server</a></td></tr>'...%link to timeseries
                       '<tr><td>data:        </td><td><a href="%s">ftp server    </a></td></tr>\n'...%link to timeseries
                       ],...
                       strtrim(D.station_name{ii}),... 
                       upper(strtrim(D.station_id{ii})),...
                       D.lon(ii),...
                       D.lat(ii),...
                       D.nt(ii),...
                       datestr(D.datenummin(ii)+datenum(1970,1,1),31),...
                       datestr(D.datenummax(ii)+datenum(1970,1,1),31),...
                      [OPT.THREDDSbase,'/',strtrim(D.filename{ii}),'.html'],...
                      [OPT.HYRAXbase  ,'/',strtrim(D.filename{ii}),'.html'],...
                      [OPT.ftpbase    ,'/',strtrim(D.filename{ii})])];

    table = [...
        '<h3>Meta information</h3>\n'...
        '<table border="0" padding="0" width="200">'...
        tableContents...
        '</table>'];

    % generate description
    output = [output, sprintf([...
        '<Placemark>\n'...
        '<name>%s</name>\n'...                      %1 name
        '<snippet></snippet>\n'...
        '<description><![CDATA[coordinates:  <br>\n'...
        '(%7.5f N,%7.5f E) <br>\n'...    %2 lat lon
        '<hr />\n'...
        '%s \n'...%link to timeseries
        '%s'...                                     %4 table with links
        ']]></description>\n'...
        '<styleUrl>#MarkerBalloonStyle</styleUrl>\n'...
        '<Point><coordinates>%3.8f,%3.8f,0</coordinates></Point>\n'... %4 lon lat
        '</Placemark>\n'],...
         strtrim(D.station_name{ii}),... % strtrim(D.station_id{ii}),...
         [D.lat(ii) D.lon(ii)],...
         [OPT.description],...
         table,...
         [D.lon(ii) D.lat(ii)])];
end
%% FOOTER
output = [output '</Folder>' KML_footer];
fprintf(OPT.fid,output);
%% close KML
fclose(OPT.fid);

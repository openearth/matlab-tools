#   Copyright notice
#   --------------------------------------------------------------------
#   Copyright (C) 2017 Witteveen+Bos
#
#       Jochem Boersma
#
#       jochem.boersma@witteveenbos.com
#
#       Van Twickelostraat 2
#       7411 SC Deventer
#       The Netherlands
#
#   This library is free software: you can redistribute it and/or modify
#   it under the terms of the GNU Lesser General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   This library is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this library.  If not, see <http://www.gnu.org/licenses/>.
#   --------------------------------------------------------------------
import numpy as _np
from System import Array as _Array 


def CornuSpiral():
	"""The CornuSpiral, used to get swift results from Fresnel Integrals.
	Sigma is stored in the first column, G is in second column."""

	#Hard-copy generation of CornuSpiral, with 250 entries)
	CornuValues = _np.array([
	[-200000,-0.500],
	[-20,-0.493-0.007j],
	[-14.142,-0.489-0.011j],
	[-6.325,-0.475-0.025j],
	[-6.293,-0.465-0.005j],
	[-6.261,-0.468+0.017j],
	[-6.229,-0.484+0.032j],
	[-6.197,-0.506+0.036j],
	[-6.164,-0.526+0.026j],
	[-6.132,-0.536+0.005j],
	[-6.099,-0.533-0.017j],
	[-6.066,-0.517-0.033j],
	[-6.033,-0.494-0.037j],
	[-6.000,-0.473-0.026j],
	[-5.967,-0.463-0.006j],
	[-5.933,-0.466+0.018j],
	[-5.899,-0.483+0.034j],
	[-5.865,-0.506+0.038j],
	[-5.831,-0.528+0.027j],
	[-5.797,-0.538+0.006j],
	[-5.762,-0.535-0.018j],
	[-5.727,-0.517-0.035j],
	[-5.692,-0.493-0.039j],
	[-5.657,-0.472-0.028j],
	[-5.621,-0.460-0.006j],
	[-5.586,-0.464+0.019j],
	[-5.550,-0.482+0.036j],
	[-5.514,-0.507+0.040j],
	[-5.477,-0.529+0.029j],
	[-5.441,-0.541+0.006j],
	[-5.404,-0.537-0.019j],
	[-5.367,-0.519-0.038j],
	[-5.329,-0.493-0.042j],
	[-5.292,-0.470-0.030j],
	[-5.254,-0.458-0.006j],
	[-5.215,-0.462+0.020j],
	[-5.177,-0.481+0.039j],
	[-5.138,-0.507+0.043j],
	[-5.099,-0.532+0.031j],
	[-5.060,-0.544+0.006j],
	[-5.020,-0.540-0.021j],
	[-4.980,-0.520-0.040j],
	[-4.940,-0.492-0.045j],
	[-4.899,-0.467-0.032j],
	[-4.858,-0.454-0.007j],
	[-4.817,-0.459+0.022j],
	[-4.775,-0.479+0.042j],
	[-4.733,-0.508+0.047j],
	[-4.690,-0.534+0.033j],
	[-4.648,-0.548+0.007j],
	[-4.604,-0.543-0.023j],
	[-4.561,-0.522-0.044j],
	[-4.517,-0.491-0.049j],
	[-4.472,-0.464-0.035j],
	[-4.427,-0.450-0.007j],
	[-4.382,-0.455+0.024j],
	[-4.336,-0.477+0.047j],
	[-4.290,-0.509+0.052j],
	[-4.243,-0.538+0.037j],
	[-4.195,-0.553+0.007j],
	[-4.147,-0.548-0.025j],
	[-4.099,-0.524-0.049j],
	[-4.050,-0.490-0.055j],
	[-4.000,-0.459-0.039j],
	[-3.950,-0.444-0.008j],
	[-3.899,-0.449+0.027j],
	[-3.847,-0.475+0.053j],
	[-3.795,-0.511+0.058j],
	[-3.742,-0.543+0.042j],
	[-3.688,-0.560+0.008j],
	[-3.633,-0.554-0.029j],
	[-3.578,-0.527-0.057j],
	[-3.521,-0.488-0.063j],
	[-3.464,-0.453-0.045j],
	[-3.406,-0.435-0.009j],
	[-3.347,-0.441+0.032j],
	[-3.286,-0.471+0.062j],
	[-3.225,-0.513+0.068j],
	[-3.162,-0.552+0.049j],
	[-3.098,-0.572+0.009j],
	[-3.033,-0.565-0.036j],
	[-2.966,-0.532-0.069j],
	[-2.898,-0.485-0.076j],
	[-2.828,-0.442-0.054j],
	[-2.757,-0.419-0.009j],
	[-2.683,-0.427+0.041j],
	[-2.608,-0.465+0.078j],
	[-2.530,-0.518+0.087j],
	[-2.449,-0.568+0.061j],
	[-2.366,-0.594+0.010j],
	[-2.280,-0.584-0.049j],
	[-2.191,-0.540-0.093j],
	[-2.098,-0.476-0.103j],
	[-2.000,-0.416-0.072j],
	[-1.897,-0.384-0.009j],
	[-1.789,-0.396+0.066j],
	[-1.673,-0.453+0.122j],
	[-1.549,-0.538+0.136j],
	[-1.414,-0.621+0.093j],
	[-1.386,-0.635+0.077j],
	[-1.356,-0.646+0.060j],
	[-1.327,-0.656+0.042j],
	[-1.296,-0.663+0.021j],
	[-1.265,-0.668-0.000j],
	[-1.233,-0.670-0.023j],
	[-1.200,-0.669-0.046j],
	[-1.166,-0.666-0.070j],
	[-1.131,-0.659-0.093j],
	[-1.095,-0.649-0.117j],
	[-1.058,-0.635-0.139j],
	[-1.020,-0.619-0.161j],
	[-0.980,-0.599-0.181j],
	[-0.938,-0.575-0.199j],
	[-0.894,-0.549-0.214j],
	[-0.849,-0.519-0.227j],
	[-0.800,-0.486-0.237j],
	[-0.748,-0.450-0.242j],
	[-0.693,-0.411-0.244j],
	[-0.632,-0.368-0.240j],
	[-0.566,-0.322-0.229j],
	[-0.490,-0.272-0.211j],
	[-0.400,-0.215-0.182j],
	[-0.283,-0.147-0.135j],
	[0.000,0.000+0.000j],
	[0.283,0.147+0.135j],
	[0.400,0.215+0.182j],
	[0.490,0.272+0.211j],
	[0.566,0.322+0.229j],
	[0.632,0.368+0.240j],
	[0.693,0.411+0.244j],
	[0.748,0.450+0.242j],
	[0.800,0.486+0.237j],
	[0.849,0.519+0.227j],
	[0.894,0.549+0.214j],
	[0.938,0.575+0.199j],
	[0.980,0.599+0.181j],
	[1.020,0.619+0.161j],
	[1.058,0.635+0.139j],
	[1.095,0.649+0.117j],
	[1.131,0.659+0.093j],
	[1.166,0.666+0.070j],
	[1.200,0.669+0.046j],
	[1.233,0.670+0.023j],
	[1.265,0.668+0.000j],
	[1.296,0.663-0.021j],
	[1.327,0.656-0.042j],
	[1.356,0.646-0.060j],
	[1.386,0.635-0.077j],
	[1.414,0.621-0.093j],
	[1.549,0.538-0.136j],
	[1.673,0.453-0.122j],
	[1.789,0.396-0.066j],
	[1.897,0.384+0.009j],
	[2.000,0.416+0.072j],
	[2.098,0.476+0.103j],
	[2.191,0.540+0.093j],
	[2.280,0.584+0.049j],
	[2.366,0.594-0.010j],
	[2.449,0.568-0.061j],
	[2.530,0.518-0.087j],
	[2.608,0.465-0.078j],
	[2.683,0.427-0.041j],
	[2.757,0.419+0.009j],
	[2.828,0.442+0.054j],
	[2.898,0.485+0.076j],
	[2.966,0.532+0.069j],
	[3.033,0.565+0.036j],
	[3.098,0.572-0.009j],
	[3.162,0.552-0.049j],
	[3.225,0.513-0.068j],
	[3.286,0.471-0.062j],
	[3.347,0.441-0.032j],
	[3.406,0.435+0.009j],
	[3.464,0.453+0.045j],
	[3.521,0.488+0.063j],
	[3.578,0.527+0.057j],
	[3.633,0.554+0.029j],
	[3.688,0.560-0.008j],
	[3.742,0.543-0.042j],
	[3.795,0.511-0.058j],
	[3.847,0.475-0.053j],
	[3.899,0.449-0.027j],
	[3.950,0.444+0.008j],
	[4.000,0.459+0.039j],
	[4.050,0.490+0.055j],
	[4.099,0.524+0.049j],
	[4.147,0.548+0.025j],
	[4.195,0.553-0.007j],
	[4.243,0.538-0.037j],
	[4.290,0.509-0.052j],
	[4.336,0.477-0.047j],
	[4.382,0.455-0.024j],
	[4.427,0.450+0.007j],
	[4.472,0.464+0.035j],
	[4.517,0.491+0.049j],
	[4.561,0.522+0.044j],
	[4.604,0.543+0.023j],
	[4.648,0.548-0.007j],
	[4.690,0.534-0.033j],
	[4.733,0.508-0.047j],
	[4.775,0.479-0.042j],
	[4.817,0.459-0.022j],
	[4.858,0.454+0.007j],
	[4.899,0.467+0.032j],
	[4.940,0.492+0.045j],
	[4.980,0.520+0.040j],
	[5.020,0.540+0.021j],
	[5.060,0.544-0.006j],
	[5.099,0.532-0.031j],
	[5.138,0.507-0.043j],
	[5.177,0.481-0.039j],
	[5.215,0.462-0.020j],
	[5.254,0.458+0.006j],
	[5.292,0.470+0.030j],
	[5.329,0.493+0.042j],
	[5.367,0.519+0.038j],
	[5.404,0.537+0.019j],
	[5.441,0.541-0.006j],
	[5.477,0.529-0.029j],
	[5.514,0.507-0.040j],
	[5.550,0.482-0.036j],
	[5.586,0.464-0.019j],
	[5.621,0.460+0.006j],
	[5.657,0.472+0.028j],
	[5.692,0.493+0.039j],
	[5.727,0.517+0.035j],
	[5.762,0.535+0.018j],
	[5.797,0.538-0.006j],
	[5.831,0.528-0.027j],
	[5.865,0.506-0.038j],
	[5.899,0.483-0.034j],
	[5.933,0.466-0.018j],
	[5.967,0.463+0.006j],
	[6.000,0.473+0.026j],
	[6.033,0.494+0.037j],
	[6.066,0.517+0.033j],
	[6.099,0.533+0.017j],
	[6.132,0.536-0.005j],
	[6.164,0.526-0.026j],
	[6.197,0.506-0.036j],
	[6.229,0.484-0.032j],
	[6.261,0.468-0.017j],
	[6.293,0.465+0.005j],
	[6.325,0.475+0.025j],
	[14.142,0.489+0.011j],
	[20,0.493+0.007j],
	[200000,0.5]])
	
	#The first column (should be a system array)
	CornuSigma = _Array[float](CornuValues[:,0].real)
	
	#The second column (should be a complex np array) 
	CornuG = CornuValues[:,1]

	return CornuSigma, CornuG


<?xml version="1.0" encoding="UTF-8"?>
<transformation>
  <info>
    <name>Check all Tables</name>
    <description />
    <extended_description />
    <trans_version />
    <trans_type>Normal</trans_type>
    <trans_status>0</trans_status>
    <directory>/</directory>
    <parameters>
      <parameter>
        <name>additional_description</name>
        <default_value>'nvt'</default_value>
        <description />
      </parameter>
      <parameter>
        <name>database</name>
        <default_value>KPP</default_value>
        <description />
      </parameter>
      <parameter>
        <name>host</name>
        <default_value>localhost</default_value>
        <description />
      </parameter>
      <parameter>
        <name>password</name>
        <default_value />
        <description />
      </parameter>
      <parameter>
        <name>reason_change</name>
        <default_value>'nvt'</default_value>
        <description />
      </parameter>
      <parameter>
        <name>schema_name</name>
        <default_value>dump</default_value>
        <description />
      </parameter>
      <parameter>
        <name>user_name</name>
        <default_value>pg</default_value>
        <description />
      </parameter>
    </parameters>
    <log>
      <trans-log-table>
        <connection />
        <schema />
        <table />
        <size_limit_lines />
        <interval />
        <timeout_days />
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STATUS</id>
          <enabled>Y</enabled>
          <name>STATUS</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
          <subject />
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
          <subject />
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
          <subject />
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
          <subject />
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
          <subject />
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
          <subject />
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>STARTDATE</id>
          <enabled>Y</enabled>
          <name>STARTDATE</name>
        </field>
        <field>
          <id>ENDDATE</id>
          <enabled>Y</enabled>
          <name>ENDDATE</name>
        </field>
        <field>
          <id>LOGDATE</id>
          <enabled>Y</enabled>
          <name>LOGDATE</name>
        </field>
        <field>
          <id>DEPDATE</id>
          <enabled>Y</enabled>
          <name>DEPDATE</name>
        </field>
        <field>
          <id>REPLAYDATE</id>
          <enabled>Y</enabled>
          <name>REPLAYDATE</name>
        </field>
        <field>
          <id>LOG_FIELD</id>
          <enabled>Y</enabled>
          <name>LOG_FIELD</name>
        </field>
        <field>
          <id>EXECUTING_SERVER</id>
          <enabled>N</enabled>
          <name>EXECUTING_SERVER</name>
        </field>
        <field>
          <id>EXECUTING_USER</id>
          <enabled>N</enabled>
          <name>EXECUTING_USER</name>
        </field>
        <field>
          <id>CLIENT</id>
          <enabled>N</enabled>
          <name>CLIENT</name>
        </field>
      </trans-log-table>
      <perf-log-table>
        <connection />
        <schema />
        <table />
        <interval />
        <timeout_days />
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>SEQ_NR</id>
          <enabled>Y</enabled>
          <name>SEQ_NR</name>
        </field>
        <field>
          <id>LOGDATE</id>
          <enabled>Y</enabled>
          <name>LOGDATE</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STEPNAME</id>
          <enabled>Y</enabled>
          <name>STEPNAME</name>
        </field>
        <field>
          <id>STEP_COPY</id>
          <enabled>Y</enabled>
          <name>STEP_COPY</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>INPUT_BUFFER_ROWS</id>
          <enabled>Y</enabled>
          <name>INPUT_BUFFER_ROWS</name>
        </field>
        <field>
          <id>OUTPUT_BUFFER_ROWS</id>
          <enabled>Y</enabled>
          <name>OUTPUT_BUFFER_ROWS</name>
        </field>
      </perf-log-table>
      <channel-log-table>
        <connection />
        <schema />
        <table />
        <timeout_days />
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>LOGGING_OBJECT_TYPE</id>
          <enabled>Y</enabled>
          <name>LOGGING_OBJECT_TYPE</name>
        </field>
        <field>
          <id>OBJECT_NAME</id>
          <enabled>Y</enabled>
          <name>OBJECT_NAME</name>
        </field>
        <field>
          <id>OBJECT_COPY</id>
          <enabled>Y</enabled>
          <name>OBJECT_COPY</name>
        </field>
        <field>
          <id>REPOSITORY_DIRECTORY</id>
          <enabled>Y</enabled>
          <name>REPOSITORY_DIRECTORY</name>
        </field>
        <field>
          <id>FILENAME</id>
          <enabled>Y</enabled>
          <name>FILENAME</name>
        </field>
        <field>
          <id>OBJECT_ID</id>
          <enabled>Y</enabled>
          <name>OBJECT_ID</name>
        </field>
        <field>
          <id>OBJECT_REVISION</id>
          <enabled>Y</enabled>
          <name>OBJECT_REVISION</name>
        </field>
        <field>
          <id>PARENT_CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>PARENT_CHANNEL_ID</name>
        </field>
        <field>
          <id>ROOT_CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>ROOT_CHANNEL_ID</name>
        </field>
      </channel-log-table>
      <step-log-table>
        <connection />
        <schema />
        <table />
        <timeout_days />
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STEPNAME</id>
          <enabled>Y</enabled>
          <name>STEPNAME</name>
        </field>
        <field>
          <id>STEP_COPY</id>
          <enabled>Y</enabled>
          <name>STEP_COPY</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>LOG_FIELD</id>
          <enabled>N</enabled>
          <name>LOG_FIELD</name>
        </field>
      </step-log-table>
      <metrics-log-table>
        <connection />
        <schema />
        <table />
        <timeout_days />
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>METRICS_DATE</id>
          <enabled>Y</enabled>
          <name>METRICS_DATE</name>
        </field>
        <field>
          <id>METRICS_CODE</id>
          <enabled>Y</enabled>
          <name>METRICS_CODE</name>
        </field>
        <field>
          <id>METRICS_DESCRIPTION</id>
          <enabled>Y</enabled>
          <name>METRICS_DESCRIPTION</name>
        </field>
        <field>
          <id>METRICS_SUBJECT</id>
          <enabled>Y</enabled>
          <name>METRICS_SUBJECT</name>
        </field>
        <field>
          <id>METRICS_TYPE</id>
          <enabled>Y</enabled>
          <name>METRICS_TYPE</name>
        </field>
        <field>
          <id>METRICS_VALUE</id>
          <enabled>Y</enabled>
          <name>METRICS_VALUE</name>
        </field>
      </metrics-log-table>
    </log>
    <maxdate>
      <connection />
      <table />
      <field />
      <offset>0.0</offset>
      <maxdiff>0.0</maxdiff>
    </maxdate>
    <size_rowset>10000</size_rowset>
    <sleep_time_empty>50</sleep_time_empty>
    <sleep_time_full>50</sleep_time_full>
    <unique_connections>N</unique_connections>
    <feedback_shown>Y</feedback_shown>
    <feedback_size>50000</feedback_size>
    <using_thread_priorities>Y</using_thread_priorities>
    <shared_objects_file />
    <capture_step_performance>N</capture_step_performance>
    <step_performance_capturing_delay>1000</step_performance_capturing_delay>
    <step_performance_capturing_size_limit>100</step_performance_capturing_size_limit>
    <dependencies>
    </dependencies>
    <partitionschemas>
    </partitionschemas>
    <slaveservers>
    </slaveservers>
    <clusterschemas>
    </clusterschemas>
    <created_user>-</created_user>
    <created_date>2017/09/04 14:58:13.751</created_date>
    <modified_user>-</modified_user>
    <modified_date>2017/09/04 14:58:13.751</modified_date>
    <key_for_session_key>H4sIAAAAAAAAAAMAAAAAAAAAAAA=</key_for_session_key>
    <is_key_private>N</is_key_private>
  </info>
  <notepads>
  </notepads>
  <connection>
    <name>Target_database</name>
    <server>${host}</server>
    <type>POSTGRESQL</type>
    <access>Native</access>
    <database>${database}</database>
    <port>5432</port>
    <username>${user_name}</username>
    <password>${password}</password>
    <servername />
    <data_tablespace />
    <index_tablespace />
    <attributes>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>5432</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <order>
    <hop>
      <from>Check all tables</from>
      <to>Errors when checking all tables</to>
      <enabled>Y</enabled>
    </hop>
  </order>
  <step>
    <name>Check all tables</name>
    <type>ExecSQL</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>Target_database</connection>
    <execute_each_row>N</execute_each_row>
    <single_statement>N</single_statement>
    <replace_variables>Y</replace_variables>
    <quoteString>N</quoteString>
    <sql>Insert INTO ${schema_name}.failed_import
(regelnummer, "Dataset.naam", "Aquo.domeintabel", "Import.waarde")
SELECT
row_number() OVER () as regelnummer,
mw."Dataset.naam" as "Dataset.naam",
'public.hoedanigheid_type' as "Aquo.domeintabel",
mw."Referentiehorizontaal.code" as "Import.waarde"
FROM
${schema_name}.meetwaarden mw
LEFT JOIN public.hoedanigheid_type dt ON dt."code" = mw."Referentiehorizontaal.code"
WHERE dt."code" IS NULL
AND mw."Referentiehorizontaal.code" IS NOT NULL;

Insert INTO ${schema_name}.failed_import
(regelnummer, "Dataset.naam", "Aquo.domeintabel", "Import.waarde")
SELECT
row_number() OVER () as regelnummer,
mw."Dataset.naam" as "Dataset.naam",
'public.Compartiment_type' as "Aquo.domeintabel",
mw."MonsterCompartiment.code" as "Import.waarde"
FROM
${schema_name}.meetwaarden mw
LEFT JOIN public.Compartiment_type dt ON dt."code" = mw."MonsterCompartiment.code"
WHERE dt."code" IS NULL
AND mw."MonsterCompartiment.code" IS NOT NULL;

Insert INTO ${schema_name}.failed_import
(regelnummer, "Dataset.naam", "Aquo.domeintabel", "Import.waarde")
SELECT
row_number() OVER () as regelnummer,
mw."Dataset.naam" as "Dataset.naam",
'domains.orgaan' as "Aquo.domeintabel",
mw."Orgaan.code" as "Import.waarde"
FROM
${schema_name}.meetwaarden mw
LEFT JOIN domains.orgaan dt ON dt."code" = mw."Orgaan.code"
WHERE dt."code" IS NULL
AND mw."Orgaan.code" IS NOT NULL;

Insert INTO ${schema_name}.failed_import
(regelnummer, "Dataset.naam", "Aquo.domeintabel", "Import.waarde")
SELECT
row_number() OVER () as regelnummer,
mw."Dataset.naam" as "Dataset.naam",
'public.taxa_group' as "Aquo.domeintabel",
mw."Organisme.naam" as "Import.waarde"
FROM
${schema_name}.meetwaarden mw
LEFT JOIN public.taxa_group dt ON dt."name" = mw."Organisme.naam"
WHERE dt."name" IS NULL
AND mw."Organisme.naam" IS NOT NULL;

Insert INTO ${schema_name}.failed_import
(regelnummer, "Dataset.naam", "Aquo.domeintabel", "Import.waarde")
SELECT
row_number() OVER () as regelnummer,
mw."Dataset.naam" as "Dataset.naam",
'public.hoedanigheid_type' as "Aquo.domeintabel",
mw."Referentievlak.code" as "Import.waarde"
FROM
${schema_name}.meetwaarden mw
LEFT JOIN public.hoedanigheid_type dt ON dt."code" = mw."Referentievlak.code"
WHERE dt."code" IS NULL
AND mw."Referentievlak.code" IS NOT NULL;

Insert INTO ${schema_name}.failed_import
(regelnummer, "Dataset.naam", "Aquo.domeintabel", "Import.waarde")
SELECT
row_number() OVER () as regelnummer,
mw."Dataset.naam" as "Dataset.naam",
'domains.monsterbewerkingsmethode' as "Aquo.domeintabel",
mw."Monsterbewerkingsmethode.code" as "Import.waarde"
FROM
${schema_name}.meetwaarden mw
LEFT JOIN domains.monsterbewerkingsmethode dt ON dt."code" = mw."Monsterbewerkingsmethode.code"
WHERE dt."code" IS NULL
AND mw."Monsterbewerkingsmethode.code" IS NOT NULL;

Insert INTO ${schema_name}.failed_import
(regelnummer, "Dataset.naam", "Aquo.domeintabel", "Import.waarde")
SELECT
row_number() OVER () as regelnummer,
mw."Dataset.naam" as "Dataset.naam",
'domains.bemonsteringsmethode' as "Aquo.domeintabel",
mw."Bemonsteringsmethode.code" as "Import.waarde"
FROM
${schema_name}.meetwaarden mw
LEFT JOIN domains.bemonsteringsmethode dt ON dt."code" = mw."Bemonsteringsmethode.code"
WHERE dt."code" IS NULL
AND mw."Bemonsteringsmethode.code" IS NOT NULL;

Insert INTO ${schema_name}.failed_import
(regelnummer, "Dataset.naam", "Aquo.domeintabel", "Import.waarde")
SELECT
row_number() OVER () as regelnummer,
mw."Dataset.naam" as "Dataset.naam",
'public.hoedanigheid_type' as "Aquo.domeintabel",
mw."Monstercriterium.code" as "Import.waarde"
FROM
${schema_name}.meetwaarden mw
LEFT JOIN public.hoedanigheid_type dt ON dt."code" = mw."Monstercriterium.code"
WHERE dt."code" IS NULL
AND mw."Monstercriterium.code" IS NOT NULL;

Insert INTO ${schema_name}.failed_import
(regelnummer, "Dataset.naam", "Aquo.domeintabel", "Import.waarde")
SELECT
row_number() OVER () as regelnummer,
mw."Dataset.naam" as "Dataset.naam",
'domains.veldapparaat' as "Aquo.domeintabel",
mw."Meetapparaat.omschrijving" as "Import.waarde"
FROM
${schema_name}.meetwaarden mw
LEFT JOIN domains.veldapparaat dt ON dt."description" = mw."Meetapparaat.omschrijving"
WHERE dt."description" IS NULL
AND mw."Meetapparaat.omschrijving" IS NOT NULL;

Insert INTO ${schema_name}.failed_import
(regelnummer, "Dataset.naam", "Aquo.domeintabel", "Import.waarde")
SELECT
row_number() OVER () as regelnummer,
mw."Dataset.naam" as "Dataset.naam",
'public.typering_type' as "Aquo.domeintabel",
mw."Typering.code" as "Import.waarde"
FROM
${schema_name}.meetwaarden mw
LEFT JOIN public.typering_type dt ON dt."code" = mw."Typering.code"
WHERE dt."code" IS NULL
AND mw."Typering.code" IS NOT NULL;

Insert INTO ${schema_name}.failed_import
(regelnummer, "Dataset.naam", "Aquo.domeintabel", "Import.waarde")
SELECT
row_number() OVER () as regelnummer,
mw."Dataset.naam" as "Dataset.naam",
'public.grootheid_type' as "Aquo.domeintabel",
mw."Grootheid.code" as "Import.waarde"
FROM
${schema_name}.meetwaarden mw
LEFT JOIN public.grootheid_type dt ON dt."code" = mw."Grootheid.code"
WHERE dt."code" IS NULL
AND mw."Grootheid.code" IS NOT NULL;

Insert INTO ${schema_name}.failed_import
(regelnummer, "Dataset.naam", "Aquo.domeintabel", "Import.waarde")
SELECT
row_number() OVER () as regelnummer,
mw."Dataset.naam" as "Dataset.naam",
'public.parameter_aquo_ds_20160105' as "Aquo.domeintabel",
mw."Parameter.code" as "Import.waarde"
FROM
${schema_name}.meetwaarden mw
LEFT JOIN public.parameter_aquo_ds_20160105 dt ON dt."code" = mw."Parameter.code"
WHERE dt."code" IS NULL
AND mw."Parameter.code" IS NOT NULL;

Insert INTO ${schema_name}.failed_import
(regelnummer, "Dataset.naam", "Aquo.domeintabel", "Import.waarde")
SELECT
row_number() OVER () as regelnummer,
mw."Dataset.naam" as "Dataset.naam",
'public.parameter_aquo_ds_20160105' as "Aquo.domeintabel",
mw."Parameter.omschrijving" as "Import.waarde"
FROM
${schema_name}.meetwaarden mw
LEFT JOIN public.parameter_aquo_ds_20160105 dt ON dt."omschrijving" = mw."Parameter.omschrijving"
WHERE dt."omschrijving" IS NULL
AND mw."Parameter.omschrijving" IS NOT NULL;

Insert INTO ${schema_name}.failed_import
(regelnummer, "Dataset.naam", "Aquo.domeintabel", "Import.waarde")
SELECT
row_number() OVER () as regelnummer,
mw."Dataset.naam" as "Dataset.naam",
'public.eenheid_type' as "Aquo.domeintabel",
mw."Eenheid.code" as "Import.waarde"
FROM
${schema_name}.meetwaarden mw
LEFT JOIN public.eenheid_type dt ON dt."code" = mw."Eenheid.code"
WHERE dt."code" IS NULL
AND mw."Eenheid.code" IS NOT NULL;

Insert INTO ${schema_name}.failed_import
(regelnummer, "Dataset.naam", "Aquo.domeintabel", "Import.waarde")
SELECT
row_number() OVER () as regelnummer,
mw."Dataset.naam" as "Dataset.naam",
'public.hoedanigheid_type' as "Aquo.domeintabel",
mw."Hoedanigheid.code" as "Import.waarde"
FROM
${schema_name}.meetwaarden mw
LEFT JOIN public.hoedanigheid_type dt ON dt."code" = mw."Hoedanigheid.code"
WHERE dt."code" IS NULL
AND mw."Hoedanigheid.code" IS NOT NULL;

Insert INTO ${schema_name}.failed_import
(regelnummer, "Dataset.naam", "Aquo.domeintabel", "Import.waarde")
SELECT
row_number() OVER () as regelnummer,
mw."Dataset.naam" as "Dataset.naam",
'public.waarde_bewerkings_methode_type' as "Aquo.domeintabel",
mw."Waardebewerkingsmethode.code" as "Import.waarde"
FROM
${schema_name}.meetwaarden mw
LEFT JOIN public.waarde_bewerkings_methode_type dt ON dt."code" = mw."Waardebewerkingsmethode.code"
WHERE dt."code" IS NULL
AND mw."Waardebewerkingsmethode.code" IS NOT NULL;

Insert INTO ${schema_name}.failed_import
(regelnummer, "Dataset.naam", "Aquo.domeintabel", "Import.waarde")
SELECT
row_number() OVER () as regelnummer,
mw."Dataset.naam" as "Dataset.naam",
'public.waarde_bepalings_methode_type' as "Aquo.domeintabel",
mw."Waardebepalingsmethode.code" as "Import.waarde"
FROM
${schema_name}.meetwaarden mw
LEFT JOIN public.waarde_bepalings_methode_type dt ON dt."code" = mw."Waardebepalingsmethode.code"
WHERE dt."code" IS NULL
AND mw."Waardebepalingsmethode.code" IS NOT NULL;

Insert INTO ${schema_name}.failed_import
(regelnummer, "Dataset.naam", "Aquo.domeintabel", "Import.waarde")
SELECT
row_number() OVER () as regelnummer,
mw."Dataset.naam" as "Dataset.naam",
'public.waarde_bepalings_methode_type' as "Aquo.domeintabel",
mw."Waardepalingsmethode.codespace" as "Import.waarde"
FROM
${schema_name}.meetwaarden mw
LEFT JOIN public.waarde_bepalings_methode_type dt ON dt."codespace" = mw."Waardepalingsmethode.codespace"
WHERE dt."codespace" IS NULL
AND mw."Waardepalingsmethode.codespace" IS NOT NULL;

Insert INTO ${schema_name}.failed_import
(regelnummer, "Dataset.naam", "Aquo.domeintabel", "Import.waarde")
SELECT
row_number() OVER () as regelnummer,
mw."Dataset.naam" as "Dataset.naam",
'domains.waardebepalingstechniek' as "Aquo.domeintabel",
mw."Waardebepalingstechniek.code" as "Import.waarde"
FROM
${schema_name}.meetwaarden mw
LEFT JOIN domains.waardebepalingstechniek dt ON dt."code" = mw."Waardebepalingstechniek.code"
WHERE dt."code" IS NULL
AND mw."Waardebepalingstechniek.code" IS NOT NULL;

Insert INTO ${schema_name}.failed_import
(regelnummer, "Dataset.naam", "Aquo.domeintabel", "Import.waarde")
SELECT
row_number() OVER () as regelnummer,
mw."Dataset.naam" as "Dataset.naam",
'public.bepaling_grens_type' as "Aquo.domeintabel",
mw."limietsymbool" as "Import.waarde"
FROM
${schema_name}.meetwaarden mw
LEFT JOIN public.bepaling_grens_type dt ON dt."code" = mw."limietsymbool"
WHERE dt."code" IS NULL
AND mw."limietsymbool" IS NOT NULL;

Insert INTO ${schema_name}.failed_import
(regelnummer, "Dataset.naam", "Aquo.domeintabel", "Import.waarde")
SELECT
row_number() OVER () as regelnummer,
mw."Dataset.naam" as "Dataset.naam",
'public.kwaliteitsoordeel_type' as "Aquo.domeintabel",
mw."Kwaliteitsoordeel.code" as "Import.waarde"
FROM
${schema_name}.meetwaarden mw
LEFT JOIN public.kwaliteitsoordeel_type dt ON dt."code" = mw."Kwaliteitsoordeel.code"
WHERE dt."code" IS NULL
AND mw."Kwaliteitsoordeel.code" IS NOT NULL;

</sql>
    <set_params>N</set_params>
    <insert_field />
    <update_field />
    <delete_field />
    <read_field />
    <arguments>
    </arguments>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>480</xloc>
      <yloc>96</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Errors when checking all tables</name>
    <type>TextFileOutput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <separator>;</separator>
    <enclosure>"</enclosure>
    <enclosure_forced>N</enclosure_forced>
    <enclosure_fix_disabled>N</enclosure_fix_disabled>
    <header>Y</header>
    <footer>N</footer>
    <format>DOS</format>
    <compression>None</compression>
    <encoding />
    <endedLine />
    <fileNameInField>N</fileNameInField>
    <fileNameField />
    <create_parent_folder>Y</create_parent_folder>
    <file>
      <name>D:\Data\Aquo\Logs\Check_all_tables</name>
      <is_command>N</is_command>
      <servlet_output>N</servlet_output>
      <do_not_open_new_file_init>N</do_not_open_new_file_init>
      <extention>log</extention>
      <append>N</append>
      <split>N</split>
      <haspartno>N</haspartno>
      <add_date>Y</add_date>
      <add_time>Y</add_time>
      <SpecifyFormat>N</SpecifyFormat>
      <date_time_format />
      <add_to_result_filenames>Y</add_to_result_filenames>
      <pad>N</pad>
      <fast_dump>N</fast_dump>
      <splitevery>0</splitevery>
    </file>
    <fields>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>784</xloc>
      <yloc>96</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step_error_handling>
    <error>
      <source_step>Check all tables</source_step>
      <target_step>Errors when checking all tables</target_step>
      <is_enabled>Y</is_enabled>
      <nr_valuename />
      <descriptions_valuename />
      <fields_valuename />
      <codes_valuename />
      <max_errors />
      <max_pct_errors />
      <min_pct_rows />
    </error>
  </step_error_handling>
  <slave-step-copy-partition-distribution>
  </slave-step-copy-partition-distribution>
  <slave_transformation>N</slave_transformation>
</transformation>

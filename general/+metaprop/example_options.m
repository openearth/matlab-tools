% EXAMPLE_CLASSDEF a very simple class definition that works with metaprops
%
% See also: metaprop.example

%% Copyright notice
%   --------------------------------------------------------------------
%   Copyright (C) 2014 Van Oord
%       Thijs Damsma
%
%       Thijs.Damsma@VanOord.com
%
%       Schaardijk 211
%       3063 NH
%       Rotterdam
%       Netherlands
%
%   This library is free software: you can redistribute it and/or modify
%   it under the terms of the GNU General Public License as published by
%   the Free Software Foundation, either version 3 of the License, or
%   (at your option) any later version.
%
%   This library is distributed in the hope that it will be useful,
%   but WITHOUT ANY WARRANTY; without even the implied warranty of
%   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%   GNU General Public License for more details.
%
%   You should have received a copy of the GNU General Public License
%   along with this library.  If not, see <http://www.gnu.org/licenses/>.
%   --------------------------------------------------------------------

% This tool is part of <a href="http://www.OpenEarth.eu">OpenEarthTools</a>.
% OpenEarthTools is an online collaboration to share and manage data and
% programming tools in an open source, version controlled environment.
% Sign up to recieve regular updates of this function, and to contribute
% your own tools.

%% Version <http://svnbook.red-bean.com/en/1.5/svn.advanced.props.special.keywords.html>
% Created: 21 Feb 2014
% Created with Matlab version: 8.3.0.73043 (R2014a)

% $Id$
% $Date$
% $Author$
% $Revision$
% $HeadURL$
% $Keywords: $

%%
classdef example_options < oop.inspectable & oop.saveload
    %% the block with meta props is first, so the details of the properies is immediatly visible
    % All properties decripeb by metaprops must be properties of the class
    properties (Constant,Hidden,Transient)
        % Code template generated by calling metaprop.Template('metaprop.example_classdef')
        example_option_metaprops = metaprop.Construct(mfilename('class'),{
            'Date',@metaprop.date,{
                'Category','When'
                'Description','Date field'
                }
            'Time',@metaprop.time,{
                'Category','When'
                'Description','Time field'
                }
            'Number',@metaprop.doubleScalar,{
                'Category','What'
                'Description','A single double precision number greater than 1'
                'Attributes',{'>',1}
                }
            'Position',@metaprop.doubleRow,{
                'Category','What'
                'Description','4 element row vector'
                }
            'Array',@metaprop.doubleArray2D,{
                'Category','What'
                'Description','5x5 array'
                }
            });
    end
    
    methods (Hidden,Access = protected)
        function value = construct_metaprops(self)
            value = self.example_option_metaprops;
        end
    end  
    
    %% Declaration of the properties, these are the same as
    properties
        Date = datenum(2012,1,16);
        Time = datenum(0,0,0,12,00,36);
        Number = 2
        Position = [1 2 3 4]
        Array = magic(5);
    end
    properties (Dependent,Transient)
        Datetime % date+time
        Datestring
    end
    
    methods
        %% constructor
        function self = example_options(varargin)
            self = self@oop.inspectable;
            self.set_onInvalidInput    = 'warning';
            self.set_onUnknownProperty = 'warning';
            self.set(varargin{:});
        end
        
        %% setter methods
        function set.Date    (self,value); self.metaprops.Date    .Check(value); self.Date     = value; end
        function set.Time    (self,value); self.metaprops.Time    .Check(value); self.Time     = value; end
        function set.Number  (self,value); self.metaprops.Number  .Check(value); self.Number   = value; end
        function set.Position(self,value); self.metaprops.Position.Check(value); self.Position = value; end
        function set.Array   (self,value); self.metaprops.Array   .Check(value); self.Array    = value; end
        
        %% getter methods
        function value = get.Datetime  (self); value = self.Date+self.Time;    end
        function value = get.Datestring(self); value = datestr(self.Datetime); end
    end
    
    methods (Static)
        function self = loadobj(s)
            self = example_options(s);
        end
    end
end
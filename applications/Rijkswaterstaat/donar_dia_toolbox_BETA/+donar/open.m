function File = open(diafile,varargin)
%OPEN  scan internal blocks of DONAR dia file + aggregate into variables
%
% File = donar.open(diafile) opens a file and returns contents
% in structure File, where subfield Blocks contains meta-data per 
% internal block, and subfield Variables contains an aggregation
% of the blocks into unique variables. The DONAR codes are resolved
% for international nomenclature.
%
% 300 Mb files into 4000 blocks can take up to 10 min to open.
% For this reason a cache file is stored next to the dia file
% after each donar.open call(), and this is used any next call. Set
% keyword cache to 0 to prevent reading a cache (default 1, and it is 
% always written).
%
% Example:
% 
%  File            = donar.open(diafile)
%                    donar.disp(File)
% [data, metadata] = donar.read(File,1,6) % 1st variable, residing in 6th column
%
%See also: open, read, disp, open = scan_file + merge_headers

%%  --------------------------------------------------------------------
%   Copyright (C) 2013 Deltares 4 Rijkswaterstaat
%
%   This library is free software: you can redistribute it and/or
%   modify it under the terms of the GNU Lesser General Public
%   License as published by the Free Software Foundation, either
%   version 2.1 of the License, or (at your option) any later version.
%
%   This library is distributed in the hope that it will be useful,
%   but WITHOUT ANY WARRANTY; without even the implied warranty of
%   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%   Lesser General Public License for more details.
%
%   You should have received a copy of the GNU Lesser General Public
%   License along with this library. If not, see <http://www.gnu.org/licenses/>.
%   --------------------------------------------------------------------

%% Version <http://svnbook.red-bean.com/en/1.5/svn.advanced.props.special.keywords.html>
% $Id: $
% $Date: $
% $Author: $
% $Revision: $
% $HeadURL: $
% $Keywords: $

OPT.disp  = 100;
OPT.cache = 1;

if nargin==0
    File = OPT;return
end
OPT = setproperty(OPT,varargin);

cachefile = strrep(diafile,'.dia','_info.mat');
if exist(cachefile) & OPT.cache
   File        = load(cachefile);
   disp('Loading cache generated by a previous donar.open() call.')
else
   File.Blocks = donar.scan_file(diafile,'disp',OPT.disp);
   try
     save(cachefile,'-struct','File')
     disp('Stored cache for faster opening in future donar.open() call.')
   catch % in case you read from read-only folder
     disp('Failed storing cache for faster opening in future donar.open() call.')
   end
end

File.Filename  = diafile;
File.Variables = donar.merge_headers(File.Blocks);

if OPT.disp > 0
   disp([mfilename,' # of blocks = ',    num2str(length(File.Blocks))])
   disp([mfilename,' # of values = ',    num2str(sum([File.Blocks.nval]))])  
   disp([mfilename,' # of parameters = ',num2str(length(File.Variables))])  
end

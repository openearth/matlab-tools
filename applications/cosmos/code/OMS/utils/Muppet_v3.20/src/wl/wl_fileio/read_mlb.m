function X=read_mlb(filename)
% READ_MLB Read .mlb files generated by Viewer Selector Interactive
%
%       X=read_mlb('filename')
%       Reads the data from the specified file into X.

% (c) Copyright 1999, WL | Delft Hydraulics, The Netherlands

% Created September 23rd, 1999 by H.R.A.Jagers

fid=fopen(filename,'rt');
if fid<0, % append .mlb if necessary
  filename2=[filename '.mlb'];
  fid=fopen(filename2,'rt');
  if fid<0,
    error(sprintf('Cannot open file: %s',filename));
  end;
  filename=filename2;
end;

% skip first seven comment lines and read comment line eight
for i=1:8, Line=fgetl(fid); end;

% element type starts from position 16
Line=Line(16:end);

% find space after type
Space=min(findstr(Line,' '));

%extract element type
Type=Line(1:(Space-1));

switch lower(Type),
case {'real','int'},

  fclose(fid);

  % read data
  X=load(filename);

case 'logical',

  fclose(fid);

  % read and convert to logical
  X=logical(load(filename));

case 'complex',

  fclose(fid);

  % read data
  X=load(filename);

  % the number of columns should always be even: (real,complex) pairs!
  if 2*round(size(X,2)/2)~=size(X,2),i
    error('Invalid file format');
  end;
 
  % combine real and complex parts
  X=X(:,1:2:end)+sqrt(-1)*X(:,2:2:end);

case 'character',

  % extract length of strings
  LBrace=min(findstr(Line,'('));
  RBrace=min(findstr(Line,')'));
  Length=eval(Line((LBrace+1):(RBrace-1)),'NaN');
  if ~isfinite(Length) | Length<=0 | (round(Length)~=Length),
    error('Could not determine length of character arrays.');
  end;

  % skip last comment line
  fgetl(fid);

  % read first data line
  Line=fgetl(fid);

  % determine the number of strings per line
  NPerLine=(length(Line)+1)/(Length+2);

  % number of strings per line should be an integer
  if NPerLine~=round(NPerLine),
    error('Invalid file format');
  end;

  % read data
  j=0;
  while ischar(Line) & ~isempty(Line),
    j=j+1;
    for i=1:NPerLine,
      X{j,i}=Line((i-1)*(Length+2)+(1:Length));
    end;
    Line=fgetl(fid);
  end;

  fclose(fid);

end;

function outh=copyprop(arg1,arg2)
%COPYPROP copys the properties of a graphics object
%      COPYPROP(Hfrom,Hto) copies the properties from the object
%      with handle Hfrom to the object with handle Hto if it is
%      of the same type as the object with handle Hform. If the
%      object with handle Hto can be a parent of an object of the
%      type Hfrom, the properties of the object with handle Hfrom
%      are copied to a new child of the object with handle Hto. 
%      COPYPROP(Hfrom) copies the properties from the object
%      with handle Hfrom to a new object with the same parent.
%      In both cases the handle of Hto can be returned:
%         Hto=COPYPROP(...)
%      The properties children, handlevisibility, and visibility
%      are NOT copied. Any new created objects have by default
%      no children and both visibility and handlevisibility set
%      off.
%
%      Supported vectorizing:
%      * arg1 and arg2 matrices of same size:
%        copy properties from arg1(i,j,...) to arg2(i,j,...)
%        or create new child for arg2(i,j,...)
%      * arg1 2-D matrix, arg2 vector
%        copy properties from arg1(i,j) to (children of) arg2(i)
%      * arg1 N-D matrix, arg2 scalar
%        copy properties from arg1(i,j,...) to (child of) arg2
%      * arg1 N-D matrix
%        copy properties from arg1(i,j,...) to new child of
%        parent of arg1(i,j,...)

%      Copyright (c) H.R.A. Jagers  12-17-1996
%      Matlab 5.1 update: 27-2-1998

if nargout>0,
  outh=[];
end;

if (nargin<1) | (nargin>2),
  help copyprop
  return;
end;

if isstr(arg1),
  arg1=hex2num(arg1);
end;

if nargin==2,
  if isstr(arg2),
    arg2=hex2num(arg2);
  end;
end;

if nargin==1,
  if ~ishandle(arg1),
    error('* The parameter must be a graphic handle.');
  end;
else, % nargin==2,
  if ~(ishandle(arg1) & ishandle(arg2)),
    error('* Both parameters must be graphic handles.');
  end;
end;

if find(arg1==0),
  error('* Cannot copy root object.');
end;

outh=-ones(size(arg1));
for i=1:prod(size(arg1)),
  h1=arg1(i);
  h2=[];
  if nargin==2,
    if isequal(size(arg1),size(arg2)),
      h2=arg2(i);
    elseif (ndims(arg1)==2) & isequal([1 size(arg1,1)],sort(size(arg2))),
      j=mod(i-1,size(arg1,1)+1);
      h2=arg2(j);
    elseif isequal(size(arg2),[1 1]),
      h2=arg2;
    else,
      outh=[];
      error('* Size of second parameter does not match size of first parameter.');
    end;
  end;
  t1=get(h1,'type');
  if ~isempty(h2),
    t2=get(h2,'type');
    t1p=get(get(h1,'parent'),'type');
    if strcmp(t1,'uimenu'),
      % uimenu is an exceptional case for its parent can be either figure or again uimenu
      if ~(strcmp(t2,'uimenu') | strcmp(t2,'figure')),
        error(['* The two handles must be of the same type, or',char(10), ...
               '  the second handle must be of the parent type',char(10), ...
               '  of the first handle.']);
      elseif strcmp(t2,'figure'),
        % always parent
        p2=h2;
        h2=[];
      else, % strcmp(t2,'uimenu'),
        % can be target or parent of target
        if ~isempty(get(h2,'label')), % if it has a label -> parent of target
          p2=h2;
          h2=[];
%        else, % if it has no label -> target
        end;
      end;
    elseif ~(strcmp(t2,t1) | strcmp(t2,t1p)),
      error(['* The two handles must be of the same type, or',char(10), ...
             '  the second handle must be of the parent type',char(10), ...
             '  of the first handle.']);
    elseif strcmp(t2,t1p), % parent type
      p2=h2;
      h2=[];
    end;
  else,
    p2=get(h1,'parent');
  end;
    
  h=h1;
   
  if strcmp(t1,'axes'),
    if isempty(h2),
      h2=axes('visible','off', ...
              'handlevisibility','off', ...
              'parent',p2);
    end;
    set(h2, ...
      'fontname',get(h,'fontname'), ...
      'fontunits',get(h,'fontunits'), ...
      'fontsize',get(h,'fontsize'), ...
      'fontweight',get(h,'fontweight'), ...
      'fontangle',get(h,'fontangle'), ...
      'ticklength',get(h,'ticklength'), ...
      'tickdir',get(h,'tickdir'), ...
      'units',get(h,'units'), ...
      'position',get(h,'position'), ...
      'xform',get(h,'xform'), ...
      'view',get(h,'view'), ...
      'projection',get(h,'projection'), ...
      'dataaspectratio',get(h,'dataaspectratio'), ...
      'plotboxaspectratio',get(h,'plotboxaspectratio'), ...
      'box',get(h,'box'), ...
      'linewidth',get(h,'linewidth'), ...
      'layer',get(h,'layer'), ...
      'drawmode',get(h,'drawmode'), ...
      'nextplot',get(h,'nextplot'), ...
      'gridlinestyle',get(h,'gridlinestyle'), ...
      'minorgridlinestyle',get(h,'minorgridlinestyle'), ...
      'color',get(h,'color'), ...
      'clim',get(h,'clim'), ...
      'colororder',get(h,'colororder'), ...
      'ambientlightcolor',get(h,'ambientlightcolor'), ...
      'cameraposition',get(h,'cameraposition'), ...
      'cameraupvector',get(h,'cameraupvector'), ...
      'cameratarget',get(h,'cameratarget'), ...
      'cameraviewangle',get(h,'cameraviewangle'), ...
      'buttondownfcn',get(h,'buttondownfcn'), ...
      'createfcn',get(h,'createfcn'), ...
      'deletefcn',get(h,'deletefcn'), ...
      'tag',get(h,'tag'), ...
      'userdata',get(h,'userdata'), ...
      'selected',get(h,'selected'), ...
      'selectionhighlight',get(h,'selectionhighlight'), ...
      'interruptible',get(h,'interruptible'), ...
      'busyaction',get(h,'busyaction'), ...
      'clipping',get(h,'clipping'));
    set(h2, ...
      'xgrid', get(h,'xgrid'), ...
      'xminorgrid', get(h,'xminorgrid'), ...
      'xminortick', get(h,'xminortick'), ...
      'xdir', get(h,'xdir'), ...
      'xscale', get(h,'xscale'), ...
      'xaxislocation', get(h,'xaxislocation'), ...
      'xcolor',get(h,'xcolor'), ...
      'xlim',get(h,'xlim'), ...
      'xtick', get(h,'xtick'), ...
      'xticklabel', get(h,'xticklabel'));
    set(h2, ...
      'ygrid', get(h,'ygrid'), ...
      'yminorgrid', get(h,'yminorgrid'), ...
      'yminortick', get(h,'yminortick'), ...
      'ydir', get(h,'ydir'), ...
      'yscale', get(h,'yscale'), ...
      'yaxislocation', get(h,'yaxislocation'), ...
      'ycolor',get(h,'ycolor'), ...
      'ylim',get(h,'ylim'), ...
      'ytick', get(h,'ytick'), ...
      'yticklabel', get(h,'yticklabel'));
    set(h2, ...
      'zgrid', get(h,'zgrid'), ...
      'zminorgrid', get(h,'zminorgrid'), ...
      'zminortick', get(h,'zminortick'), ...
      'zdir', get(h,'zdir'), ...
      'zscale', get(h,'zscale'), ...
      'zcolor',get(h,'zcolor'), ...
      'zlim',get(h,'zlim'), ...
      'ztick', get(h,'ztick'), ...
      'zticklabel', get(h,'zticklabel'));
    set(h2, ...
      'tickdirmode',get(h,'tickdirmode'), ...
      'dataaspectratiomode',get(h,'dataaspectratiomode'), ...
      'plotboxaspectratiomode',get(h,'plotboxaspectratiomode'), ...
      'camerapositionmode',get(h,'camerapositionmode'), ...
      'cameraupvectormode',get(h,'cameraupvectormode'), ...
      'cameratargetmode',get(h,'cameratargetmode'), ...
      'cameraviewanglemode',get(h,'cameraviewanglemode'), ...
      'xlimmode',get(h,'xlimmode'), ...
      'xtickmode', get(h,'xtickmode'), ...
      'xticklabelmode', get(h,'xticklabelmode'), ...
      'ylimmode',get(h,'ylimmode'), ...
      'ytickmode', get(h,'ytickmode'), ...
      'yticklabelmode', get(h,'yticklabelmode'), ...
      'zlimmode',get(h,'zlimmode'), ...
      'ztickmode', get(h,'ztickmode'), ...
      'zticklabelmode', get(h,'zticklabelmode'), ...
      'climmode',get(h,'climmode'));
    set(h2, ...
      'view',get(h,'view'));
    hh1=get(h1,'xlabel');
    hh2=get(h2,'xlabel');
    copyprop(hh1,hh2);
    hh1=get(h1,'ylabel');
    hh2=get(h2,'ylabel');
    copyprop(hh1,hh2);
    hh1=get(h1,'zlabel');
    hh2=get(h2,'zlabel');
    copyprop(hh1,hh2);
    hh1=get(h1,'title');
    hh2=get(h2,'title');
    copyprop(hh1,hh2);
  elseif strcmp(t1,'text'),
    if isempty(h2),
      h2=text('visible','off', ...
              'handlevisibility','off', ...
              'parent',p2);
    end;
    set(h2, ...
      'fontname',get(h,'fontname'), ...
      'fontunits',get(h,'fontunits'), ...
      'fontsize',get(h,'fontsize'), ...
      'fontweight',get(h,'fontweight'), ...
      'fontangle',get(h,'fontangle'), ...
      'color',get(h,'color'), ...
      'interpreter',get(h,'interpreter'), ...
      'string',get(h,'string'), ...
      'units',get(h,'units'), ...
      'position',get(h,'position'), ...
      'horizontalalignment',get(h,'horizontalalignment'), ...
      'verticalalignment', get(h,'verticalalignment'), ...
      'rotation', get(h,'rotation'), ...
      'erasemode', get(h,'erasemode'), ...
      'buttondownfcn',get(h,'buttondownfcn'), ...
      'createfcn',get(h,'createfcn'), ...
      'deletefcn',get(h,'deletefcn'), ...
      'tag',get(h,'tag'), ...
      'userdata',get(h,'userdata'), ...
      'selected',get(h,'selected'), ...
      'selectionhighlight',get(h,'selectionhighlight'), ...
      'interruptible',get(h,'interruptible'), ...
      'busyaction',get(h,'busyaction'), ...
      'clipping',get(h,'clipping'));
  elseif strcmp(t1,'line'),
    if isempty(h2),
      h2=line('visible','off', ...
              'handlevisibility','off', ...
              'parent',p2);
    end;
    set(h2, ...
      'linestyle',get(h,'linestyle'), ...
      'linewidth',get(h,'linewidth'), ...
      'color',get(h,'color'), ...
      'marker',get(h,'marker'), ...
      'markersize',get(h,'markersize'), ...
      'markeredgecolor',get(h,'markeredgecolor'), ...
      'markerfacecolor',get(h,'markerfacecolor'), ...
      'xdata',get(h,'xdata'), ...
      'ydata',get(h,'ydata'), ...
      'zdata',get(h,'zdata'), ...
      'erasemode', get(h,'erasemode'), ...
      'buttondownfcn',get(h,'buttondownfcn'), ...
      'createfcn',get(h,'createfcn'), ...
      'deletefcn',get(h,'deletefcn'), ...
      'tag',get(h,'tag'), ...
      'userdata',get(h,'userdata'), ...
      'selected',get(h,'selected'), ...
      'selectionhighlight',get(h,'selectionhighlight'), ...
      'interruptible',get(h,'interruptible'), ...
      'busyaction',get(h,'busyaction'), ...
      'clipping',get(h,'clipping'));
  elseif strcmp(t1,'patch'),
    if isempty(h2),
      h2=patch('visible','off', ...
              'handlevisibility','off', ...
              'parent',p2);
    end;
    set(h2, ...
      'facecolor',get(h,'facecolor'), ...
      'edgecolor',get(h,'edgecolor'), ...
      'vertices',get(h,'vertices'), ...
      'faces',get(h,'faces'), ...
      'facevertexcdata',get(h,'facevertexcdata'), ...
      'cdatamapping',get(h,'cdatamapping'), ...
      'erasemode', get(h,'erasemode'), ...
      'linestyle',get(h,'linestyle'), ...
      'linewidth',get(h,'linewidth'), ...
      'marker',get(h,'marker'), ...
      'markersize',get(h,'markersize'), ...
      'markeredgecolor',get(h,'markeredgecolor'), ...
      'markerfacecolor',get(h,'markerfacecolor'), ...
      'facelighting',get(h,'facelighting'), ...
      'edgelighting',get(h,'edgelighting'), ...
      'backfacelighting',get(h,'backfacelighting'), ...
      'ambientstrength',get(h,'ambientstrength'), ...
      'diffusestrength',get(h,'diffusestrength'), ...
      'specularstrength',get(h,'specularstrength'), ...
      'specularexponent',get(h,'specularexponent'), ...
      'specularcolorreflectance',get(h,'specularcolorreflectance'), ...
      'vertexnormals',get(h,'vertexnormals'), ...
      'normalmode',get(h,'normalmode'), ...
      'buttondownfcn',get(h,'buttondownfcn'), ...
      'createfcn',get(h,'createfcn'), ...
      'deletefcn',get(h,'deletefcn'), ...
      'tag',get(h,'tag'), ...
      'userdata',get(h,'userdata'), ...
      'selected',get(h,'selected'), ...
      'selectionhighlight',get(h,'selectionhighlight'), ...
      'interruptible',get(h,'interruptible'), ...
      'busyaction',get(h,'busyaction'), ...
      'clipping',get(h,'clipping'));
%      'xdata',get(h,'xdata'), ...
%      'ydata',get(h,'ydata'), ...
%      'zdata',get(h,'zdata'), ...
%      'cdata',get(h,'cdata'), ...
  elseif strcmp(t1,'image'),
    if isempty(h2),
      h2=image('visible','off', ...
               'handlevisibility','off', ...
               'parent',p2);
    end;
    set(h2, ...
      'xdata',get(h,'xdata'), ...
      'ydata',get(h,'ydata'), ...
      'cdata',get(h,'cdata'), ...
      'cdatamapping',get(h,'cdatamapping'), ...
      'erasemode', get(h,'erasemode'), ...
      'buttondownfcn',get(h,'buttondownfcn'), ...
      'createfcn',get(h,'createfcn'), ...
      'deletefcn',get(h,'deletefcn'), ...
      'tag',get(h,'tag'), ...
      'userdata',get(h,'userdata'), ...
      'selected',get(h,'selected'), ...
      'selectionhighlight',get(h,'selectionhighlight'), ...
      'interruptible',get(h,'interruptible'), ...
      'busyaction',get(h,'busyaction'), ...
      'clipping',get(h,'clipping'));
  elseif strcmp(t1,'surface'),
    if isempty(h2),
      h2=surface('visible','off', ...
                 'handlevisibility','off', ...
                 'parent',p2);
    end;
    set(h2, ...
      'facecolor',get(h,'facecolor'), ...
      'edgecolor',get(h,'edgecolor'), ...
      'xdata',get(h,'xdata'), ...
      'ydata',get(h,'ydata'), ...
      'zdata',get(h,'zdata'), ...
      'cdata',get(h,'cdata'), ...
      'cdatamapping',get(h,'cdatamapping'), ...
      'erasemode', get(h,'erasemode'), ...
      'meshstyle',get(h,'meshstyle'), ...
      'linestyle',get(h,'linestyle'), ...
      'linewidth',get(h,'linewidth'), ...
      'marker',get(h,'marker'), ...
      'markersize',get(h,'markersize'), ...
      'markeredgecolor',get(h,'markeredgecolor'), ...
      'markerfacecolor',get(h,'markerfacecolor'), ...
      'facelighting',get(h,'facelighting'), ...
      'edgelighting',get(h,'edgelighting'), ...
      'backfacelighting',get(h,'backfacelighting'), ...
      'ambientstrength',get(h,'ambientstrength'), ...
      'diffusestrength',get(h,'diffusestrength'), ...
      'specularstrength',get(h,'specularstrength'), ...
      'specularexponent',get(h,'specularexponent'), ...
      'specularcolorreflectance',get(h,'specularcolorreflectance'), ...
      'vertexnormals',get(h,'vertexnormals'), ...
      'normalmode',get(h,'normalmode'), ...
      'buttondownfcn',get(h,'buttondownfcn'), ...
      'createfcn',get(h,'createfcn'), ...
      'deletefcn',get(h,'deletefcn'), ...
      'tag',get(h,'tag'), ...
      'userdata',get(h,'userdata'), ...
      'selected',get(h,'selected'), ...
      'selectionhighlight',get(h,'selectionhighlight'), ...
      'interruptible',get(h,'interruptible'), ...
      'busyaction',get(h,'busyaction'), ...
      'clipping',get(h,'clipping'));
  elseif strcmp(t1,'figure'),
    if isempty(h2),
      h2=figure('visible','off', ...
                'handlevisibility','off');
    end;
    set(h2, ...
      'backingstore',get(h,'backingstore'), ...
      'inverthardcopy',get(h,'inverthardcopy'), ...
      'renderer',get(h,'renderer'), ...
      'renderermode',get(h,'renderermode'), ...
      'numbertitle',get(h,'numbertitle'), ...
      'name',get(h,'name'), ...
      'menubar',get(h,'menubar'), ...
      'pointershapecdata',get(h,'pointershapecdata'), ...
      'pointershapehotspot',get(h,'pointershapehotspot'), ...
      'pointer',get(h,'pointer'), ...
      'units',get(h,'units'), ...
      'position',get(h,'position'), ...
      'paperunits',get(h,'paperunits'), ...
      'paperorientation',get(h,'paperorientation'), ...
      'papertype',get(h,'papertype'), ...
      'paperposition',get(h,'paperposition'), ...
      'nextplot',get(h,'nextplot'), ...
      'resize',get(h,'resize'), ...
      'resizefcn',get(h,'resizefcn'), ...
      'closerequestfcn',get(h,'closerequestfcn'), ...
      'keypressfcn',get(h,'keypressfcn'), ...
      'windowbuttondownfcn',get(h,'windowbuttondownfcn'), ...
      'windowbuttonupfcn',get(h,'windowbuttonupfcn'), ...
      'windowbuttonmotionfcn',get(h,'windowbuttonmotionfcn'), ...
      'color',get(h,'color'), ...
      'colormap',get(h,'colormap'), ...
      'mincolormap',get(h,'mincolormap'), ...
      'sharecolors',get(h,'sharecolors'), ...
      'dithermap',get(h,'dithermap'), ...
      'dithermapmode',get(h,'dithermapmode'), ...
      'buttondownfcn',get(h,'buttondownfcn'), ...
      'createfcn',get(h,'createfcn'), ...
      'deletefcn',get(h,'deletefcn'), ...
      'tag',get(h,'tag'), ...
      'userdata',get(h,'userdata'), ...
      'selected',get(h,'selected'), ...
      'selectionhighlight',get(h,'selectionhighlight'), ...
      'interruptible',get(h,'interruptible'), ...
      'busyaction',get(h,'busyaction'), ...
      'clipping',get(h,'clipping'));
       % don't loose figures by setting integerhandle to 'off'
    if strcmp(get(h,'integerhandle'),'off') & strcmp(get(h2,'integerhandle'),'on'),
      X=allchild(0);
      set(h2,'integerhandle','off');
      Y=allchild(0);
      h2=setdiff(Y,X);
    end;
  elseif strcmp(t1,'light'),
    if isempty(h2),
      h2=light('visible','off', ...
               'handlevisibility','off', ...
               'parent',p2);
    end;
    set(h2, ...
      'position',get(h,'position'), ...
      'style',get(h,'style'), ...
      'color',get(h,'color'), ...
      'buttondownfcn',get(h,'buttondownfcn'), ...
      'createfcn',get(h,'createfcn'), ...
      'deletefcn',get(h,'deletefcn'), ...
      'tag',get(h,'tag'), ...
      'userdata',get(h,'userdata'), ...
      'selected',get(h,'selected'), ...
      'selectionhighlight',get(h,'selectionhighlight'), ...
      'interruptible',get(h,'interruptible'), ...
      'busyaction',get(h,'busyaction'), ...
      'clipping',get(h,'clipping'));
  elseif strcmp(t1,'uimenu'),
    if isempty(h2),
      h2=uimenu('visible','off', ...
                'handlevisibility','off', ...
                'parent',p2);
    end;
    set(h2, ...
      'accelerator',get(h,'accelerator'), ...
      'callback',get(h,'callback'), ...
      'checked',get(h,'checked'), ...
      'enable',get(h,'enable'), ...
      'foregroundcolor',get(h,'foregroundcolor'), ...
      'label',get(h,'label'), ...
      'separator',get(h,'separator'), ...
      'buttondownfcn',get(h,'buttondownfcn'), ...
      'createfcn',get(h,'createfcn'), ...
      'deletefcn',get(h,'deletefcn'), ...
      'tag',get(h,'tag'), ...
      'userdata',get(h,'userdata'), ...
      'selected',get(h,'selected'), ...
      'selectionhighlight',get(h,'selectionhighlight'), ...
      'interruptible',get(h,'interruptible'), ...
      'busyaction',get(h,'busyaction'), ...
      'clipping',get(h,'clipping'));
%      'position',get(h,'position'), ...
  elseif strcmp(t1,'uicontrol'),
    if isempty(h2),
      h2=uicontrol('visible','off', ...
                   'handlevisibility','off', ...
                   'parent',p2);
    end;
    set(h2, ...
      'style',get(h,'style'), ....
      'fontname',get(h,'fontname'), ...
      'fontunits',get(h,'fontunits'), ...
      'fontsize',get(h,'fontsize'), ...
      'fontweight',get(h,'fontweight'), ...
      'fontangle',get(h,'fontangle'), ...
      'foregroundcolor',get(h,'foregroundcolor'), ...
      'string',get(h,'string'), ...
      'horizontalalignment',get(h,'horizontalalignment'), ...
      'units',get(h,'units'), ...
      'position',get(h,'position'), ...
      'backgroundcolor',get(h,'backgroundcolor'), ...
      'max',get(h,'max'), ...
      'min',get(h,'min'), ...
      'value',get(h,'value'), ...
      'sliderstep',get(h,'sliderstep'), ...
      'listboxtop',get(h,'listboxtop'), ...
      'enable',get(h,'enable'), ...
      'buttondownfcn',get(h,'buttondownfcn'), ...
      'createfcn',get(h,'createfcn'), ...
      'deletefcn',get(h,'deletefcn'), ...
      'callback',get(h,'callback'), ...
      'tag',get(h,'tag'), ...
      'userdata',get(h,'userdata'), ...
      'selected',get(h,'selected'), ...
      'selectionhighlight',get(h,'selectionhighlight'), ...
      'interruptible',get(h,'interruptible'), ...
      'busyaction',get(h,'busyaction'), ...
      'clipping',get(h,'clipping'));
  else,
    fprintf(1,'* Not yet implemented.\n');
  end;
  outh(i)=h2;
end;

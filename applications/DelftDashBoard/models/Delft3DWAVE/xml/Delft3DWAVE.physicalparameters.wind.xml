<?xml version="1.0"?>
<!-- Written on 25-Mar-2010 19:17:24 using the XML Toolbox for Matlab -->
<root>
 <element>
    <tag>radiouniformw</tag>
    <style>radiobutton</style>
    <position>10 110</position>
    <text>Uniform</text>
    <type>string</type>
    <variable>handles.Model(md).Input(ad).Wind</variable>
    <value>Uniform</value>
    <dependencies>
      <dependency>
        <action>on</action>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).Wind</variable>
            <value>Uniform</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
    </dependencies>    
  </element>
  <element>
    <tag>radiospacevaryingw</tag>
    <style>radiobutton</style>
    <position>10 90</position>
    <text>Space-varying</text>
    <type>string</type>
    <variable>handles.Model(md).Input(ad).Wind</variable>
    <value>Spacevarying</value>
    <dependencies>
      <dependency>
        <action>on</action>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).Wind</variable>
            <value>Spacevarying</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
    </dependencies>    
  </element>
  <element>
    <tag>editspeedw</tag>
    <style>edit</style>
    <position>70 65 50 20</position>
    <text>Speed : </text>
    <textposition>left</textposition>
    <variable>handles.Model(md).Input(ad).SpeedW</variable>
    <type>real</type>
    <tooltipstring>Enter wind speed</tooltipstring>
    <dependencies>
      <dependency>
        <action>enable</action>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).Wind</variable>
            <value>Uniform</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
    </dependencies>    
  </element>
  <element>
    <tag>textspeedunit</tag>
    <style>text</style>
    <position>130 65</position>
    <text>[m/s]</text>
    <dependencies>
      <dependency>
        <action>enable</action>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).Wind</variable>
            <value>Uniform</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
    </dependencies>    
  </element>
  <element>
    <tag>editdirw</tag>
    <style>edit</style>
    <position>70 40 50 20</position>
    <text>Direction : </text>
    <textposition>left</textposition>
    <variable>handles.Model(md).Input(ad).DirectionW</variable>
    <type>real</type>
    <tooltipstring>Enter wind direction</tooltipstring>
    <dependencies>
      <dependency>
        <action>enable</action>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).Wind</variable>
            <value>Uniform</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
    </dependencies>    
  </element>
  <element>
    <tag>textdirwunit</tag>
    <style>text</style>
    <position>130 40</position>
    <text>[deg]</text>
    <dependencies>
      <dependency>
        <action>enable</action>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).Wind</variable>
            <value>Uniform</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
    </dependencies>    
  </element>
  <element>
    <tag>pushselectwindfield</tag>
    <style>pushselectfile</style>
    <position>180 110 150 20</position>
    <tooltipstring>Select wind field file</tooltipstring>
    <text>Select wind field file</text>
    <variable>handles.Model(md).Input(ad).WindFile</variable>
    <extension>*.wnd</extension>
    <selectiontext>Select wind field file</selectiontext>
    <onchange>ddb_Delft3DWAVE_wind</onchange>
    <option1>file</option1>
    <dependencies>
      <dependency>
        <action>enable</action>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).Wind</variable>
            <value>Spacevarying</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
    </dependencies>    
  </element>
  <element>
    <tag>textwindfile</tag>
    <style>text</style>
    <position>180 90</position>
    <text>Wind field file : </text>
    <dependencies>
      <dependency>
        <action>enable</action>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).Wind</variable>
            <value>Spacevarying</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
    </dependencies>  
  </element>
  <element>
    <tag>radioasbathy</tag>
    <style>radiobutton</style>
    <position>180 70</position>
    <text>As bathymetry</text>
    <type>string</type>
    <variable>handles.Model(md).Input(ad).WindGrid</variable>
    <value>Asbathy</value>
    <dependencies>
      <dependency>
        <action>enable</action>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).Wind</variable>
            <value>Spacevarying</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
    </dependencies>    
  </element>
  <element>
    <tag>radiotospecify</tag>
    <style>radiobutton</style>
    <position>180 50</position>
    <text>To specify</text>
    <type>string</type>
    <variable>handles.Model(md).Input(ad).WindGrid</variable>
    <value>Tospecify</value>
    <dependencies>
      <dependency>
        <action>enable</action>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).Wind</variable>
            <value>Spacevarying</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>    
      <dependency>
        <action>on</action>
        <tags>
          <tag>radioasbathy</tag>
        </tags>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).WindGrid</variable>
            <value>Tospecify</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
    </dependencies>    
  </element>
  <element>
    <tag>textwindtext</tag>
    <style>text</style>
    <position>550 110</position>
    <text>Wind grid data : </text>
    <dependencies>
      <dependency>
        <action>enable</action>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).Wind</variable>
            <value>Spacevarying</value>
            <operator>eq</operator>
          </check>
          <check>
            <variable>handles.Model(md).Input(ad).WindGrid</variable>
            <value>Tospecify</value>
            <operator>eq</operator>
          </check>          
        </checks>
      </dependency>
    </dependencies>    
  </element>  
  <element>
    <tag>editxoriginw</tag>
    <style>edit</style>
    <position>580 85 50 20</position>
    <text>X-origin : </text>
    <textposition>left</textposition>
    <variable>handles.Model(md).Input(ad).XoriginW</variable>
    <type>real</type>
    <tooltipstring>Enter x origin</tooltipstring>
    <dependencies>
      <dependency>
        <action>enable</action>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).Wind</variable>
            <value>Spacevarying</value>
            <operator>eq</operator>
          </check>
          <check>
            <variable>handles.Model(md).Input(ad).WindGrid</variable>
            <value>Tospecify</value>
            <operator>eq</operator>
          </check>          
        </checks>
      </dependency>
    </dependencies>    
  </element>
  <element>
    <tag>edityoriginw</tag>
    <style>edit</style>
    <position>580 60 50 20</position>
    <text>Y-origin : </text>
    <textposition>left</textposition>
    <variable>handles.Model(md).Input(ad).YoriginW</variable>
    <type>real</type>
    <tooltipstring>Enter y origin</tooltipstring>
    <dependencies>
      <dependency>
        <action>enable</action>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).Wind</variable>
            <value>Spacevarying</value>
            <operator>eq</operator>
          </check>
          <check>
            <variable>handles.Model(md).Input(ad).WindGrid</variable>
            <value>Tospecify</value>
            <operator>eq</operator>
          </check>          
        </checks>
      </dependency>
    </dependencies>    
  </element>
  <element>
    <tag>editanglew</tag>
    <style>edit</style>
    <position>580 35 50 20</position>
    <text>Angle : </text>
    <textposition>left</textposition>
    <variable>handles.Model(md).Input(ad).AngleW</variable>
    <type>real</type>
    <tooltipstring>Enter grid angle</tooltipstring>
    <dependencies>
      <dependency>
        <action>enable</action>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).Wind</variable>
            <value>Spacevarying</value>
            <operator>eq</operator>
          </check>
          <check>
            <variable>handles.Model(md).Input(ad).WindGrid</variable>
            <value>Tospecify</value>
            <operator>eq</operator>
          </check>          
        </checks>
      </dependency>
    </dependencies>    
  </element>
  <element>
    <tag>editxcellsw</tag>
    <style>edit</style>
    <position>780 110 50 20</position>
    <text>Number of X-cells : </text>
    <textposition>left</textposition>
    <variable>handles.Model(md).Input(ad).XcellsW</variable>
    <type>integer</type>
    <tooltipstring>Enter number of cells in x direction</tooltipstring>
    <dependencies>
      <dependency>
        <action>enable</action>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).Wind</variable>
            <value>Spacevarying</value>
            <operator>eq</operator>
          </check>
          <check>
            <variable>handles.Model(md).Input(ad).WindGrid</variable>
            <value>Tospecify</value>
            <operator>eq</operator>
          </check>          
        </checks>
      </dependency>
    </dependencies>    
  </element>  
  <element>
    <tag>editycellsw</tag>
    <style>edit</style>
    <position>780 85 50 20</position>
    <text>Number of Y-cells : </text>
    <textposition>left</textposition>
    <variable>handles.Model(md).Input(ad).YcellsW</variable>
    <type>integer</type>
    <tooltipstring>Enter number of cells in y direction</tooltipstring>
    <dependencies>
      <dependency>
        <action>enable</action>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).Wind</variable>
            <value>Spacevarying</value>
            <operator>eq</operator>
          </check>
          <check>
            <variable>handles.Model(md).Input(ad).WindGrid</variable>
            <value>Tospecify</value>
            <operator>eq</operator>
          </check>          
        </checks>
      </dependency>
    </dependencies>    
  </element>
  <element>
    <tag>editxgridsize</tag>
    <style>edit</style>
    <position>780 60 50 20</position>
    <text>X-grid size : </text>
    <textposition>left</textposition>
    <variable>handles.Model(md).Input(ad).XsizeW</variable>
    <type>real</type>
    <tooltipstring>Enter cell size in x direction</tooltipstring>
    <dependencies>
      <dependency>
        <action>enable</action>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).Wind</variable>
            <value>Spacevarying</value>
            <operator>eq</operator>
          </check>
          <check>
            <variable>handles.Model(md).Input(ad).WindGrid</variable>
            <value>Tospecify</value>
            <operator>eq</operator>
          </check>          
        </checks>
      </dependency>
    </dependencies>    
  </element>
  <element>
    <tag>editygridsize</tag>
    <style>edit</style>
    <position>780 35 50 20</position>
    <text>Y-grid size : </text>
    <textposition>left</textposition>
    <variable>handles.Model(md).Input(ad).YsizeW</variable>
    <type>real</type>
    <tooltipstring>Enter cell size in y direction</tooltipstring>
    <dependencies>
      <dependency>
        <action>enable</action>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).Wind</variable>
            <value>Spacevarying</value>
            <operator>eq</operator>
          </check>
          <check>
            <variable>handles.Model(md).Input(ad).WindGrid</variable>
            <value>Tospecify</value>
            <operator>eq</operator>
          </check>          
        </checks>
      </dependency>
    </dependencies>    
  </element>  
</root>

<?xml version="1.0"?>
<!-- Written on 25-Mar-2010 19:17:24 using the XML Toolbox for Matlab -->
<root>
  <element>
    <tag>editreflections</tag>
    <style>popupmenu</style>
    <position>180 110 110 20</position>
    <text>Generation mode for physics : </text>
    <type>string</type>
    <variable>handles.Model(md).Input(ad).GenerationIval</variable>
    <list>
      <texts>
        <variable>handles.Model(md).Input(ad).Generation</variable>
      </texts>
      <values>
        <variable>handles.Model(md).Input(ad).Generation</variable>
      </values>      
    </list>
  </element>
  <element>
    <tag>checkbreaking</tag>
    <style>checkbox</style>
    <position>40 85</position>
    <text>Depth-induced breaking (B&J model)</text>
    <variable>handles.Model(md).Input(ad).Breaking</variable>
  </element>
  <element>
    <tag>editalpha1</tag>
    <style>edit</style>
    <position>60 60 50 20</position>
    <text>Alpha : </text>
    <textposition>left</textposition>
    <variable>handles.Model(md).Input(ad).Alpha1</variable>
    <type>real</type>
    <tooltipstring>Enter wave breaking alpha</tooltipstring>
    <dependencies>
      <dependency>
        <action>enable</action>
        <tags>
          <tag>checkbreaking</tag>
        </tags>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).Breaking</variable>
            <value>1</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
    </dependencies>    
  </element>
  <element>
    <tag>textalpha1unit</tag>
    <style>text</style>
    <position>120 60</position>
    <text>[-]</text>
    <dependencies>
      <dependency>
        <action>enable</action>
        <tags>
          <tag>checkbreaking</tag>
        </tags>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).Breaking</variable>
            <value>1</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
    </dependencies>    
  </element>
  <element>
    <tag>editgamma</tag>
    <style>edit</style>
    <position>60 35 50 20</position>
    <text>Gamma : </text>
    <textposition>left</textposition>
    <variable>handles.Model(md).Input(ad).Gamma</variable>
    <type>real</type>
    <tooltipstring>Enter wave breaking gamma</tooltipstring>
    <dependencies>
      <dependency>
        <action>enable</action>
        <tags>
          <tag>checkbreaking</tag>
        </tags>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).Breaking</variable>
            <value>1</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
    </dependencies>    
  </element>
  <element>
    <tag>textgammaunit</tag>
    <style>text</style>
    <position>120 35</position>
    <text>[-]</text>
    <dependencies>
      <dependency>
        <action>enable</action>
        <tags>
          <tag>checkbreaking</tag>
        </tags>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).Breaking</variable>
            <value>1</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
    </dependencies>    
  </element>
  <element>
    <tag>checktriad</tag>
    <style>checkbox</style>
    <position>250 85</position>
    <text>Non-linear triad interactions (LTA)</text>
    <variable>handles.Model(md).Input(ad).Triad</variable>
  </element>
  <element>
    <tag>editalpha2</tag>
    <style>edit</style>
    <position>270 60 50 20</position>
    <text>Alpha : </text>
    <textposition>left</textposition>
    <variable>handles.Model(md).Input(ad).Alpha2</variable>
    <type>real</type>
    <tooltipstring>Enter triad interaction alpha</tooltipstring>
    <dependencies>
      <dependency>
        <action>enable</action>
        <tags>
          <tag>checktriad</tag>
        </tags>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).Triad</variable>
            <value>1</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
    </dependencies>    
  </element>
  <element>
    <tag>textalpha2unit</tag>
    <style>text</style>
    <position>330 60</position>
    <text>[-]</text>
    <dependencies>
      <dependency>
        <action>enable</action>
        <tags>
          <tag>checktriad</tag>
        </tags>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).Triad</variable>
            <value>1</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
    </dependencies>        
  </element>
  <element>
    <tag>editbeta</tag>
    <style>edit</style>
    <position>270 35 50 20</position>
    <text>Beta : </text>
    <textposition>left</textposition>
    <variable>handles.Model(md).Input(ad).Beta</variable>
    <type>real</type>
    <tooltipstring>Enter triad interaction beta</tooltipstring>
    <dependencies>
      <dependency>
        <action>enable</action>
        <tags>
          <tag>checktriad</tag>
        </tags>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).Triad</variable>
            <value>1</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
    </dependencies>        
  </element>
  <element>
    <tag>textbetaunit</tag>
    <style>text</style>
    <position>330 35</position>
    <text>[-]</text>
    <dependencies>
      <dependency>
        <action>enable</action>
        <tags>
          <tag>checktriad</tag>
        </tags>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).Triad</variable>
            <value>1</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
    </dependencies>    
  </element>
  <element>
    <tag>checkfriction</tag>
    <style>checkbox</style>
    <position>460 85</position>
    <text>Bottom friction</text>
    <variable>handles.Model(md).Input(ad).Friction</variable>
  </element>
  <element>
    <tag>edittype</tag>
    <style>popupmenu</style>
    <position>480 60 80 20</position>
    <text>Type : </text>
    <textposition>left</textposition>
    <variable>handles.Model(md).Input(ad).Typeval</variable>
    <type>string</type>
    <list>
      <texts>
        <variable>handles.Model(md).Input(ad).Type</variable>
      </texts>
      <values>
        <variable>handles.Model(md).Input(ad).Type</variable>
      </values>      
    </list>
    <dependencies>
      <dependency>
        <action>enable</action>
        <tags>
          <tag>checkfriction</tag>
        </tags>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).Friction</variable>
            <value>1</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
    </dependencies>    
  </element>  
  <element>
    <tag>editcoefficient</tag>
    <style>edit</style>
    <position>480 35 50 20</position>
    <text>Coefficient : </text>
    <textposition>left</textposition>
    <variable>handles.Model(md).Input(ad).Coefficient</variable>
    <type>real</type>
    <tooltipstring>Enter friction coefficient</tooltipstring>
    <dependencies>
      <dependency>
        <action>enable</action>
        <tags>
          <tag>checkfriction</tag>
        </tags>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).Friction</variable>
            <value>1</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
    </dependencies>        
  </element>
  <element>
    <tag>checkdiffraction</tag>
    <style>checkbox</style>
    <position>670 85</position>
    <text>Diffraction</text>
    <variable>handles.Model(md).Input(ad).Diffraction</variable>    
  </element>
  <element>
    <tag>editsmoothcoef</tag>
    <style>edit</style>
    <position>690 60 50 20</position>
    <text>Smoothing coefficient : </text>
    <textposition>left</textposition>
    <variable>handles.Model(md).Input(ad).Smoothcoef</variable>
    <type>real</type>
    <tooltipstring>Enter smoothing coefficient</tooltipstring>
    <dependencies>
      <dependency>
        <action>enable</action>
        <tags>
          <tag>checkdiffraction</tag>
        </tags>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).Diffraction</variable>
            <value>1</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
    </dependencies>        
  </element>  
  <element>
    <tag>editsmoothsteps</tag>
    <style>edit</style>
    <position>690 35 50 20</position>
    <text>Smoothing steps : </text>
    <textposition>left</textposition>
    <variable>handles.Model(md).Input(ad).Smoothsteps</variable>
    <type>integer</type>
    <tooltipstring>Enter smoothing steps</tooltipstring>
    <dependencies>
      <dependency>
        <action>enable</action>
        <tags>
          <tag>checkdiffraction</tag>
        </tags>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).Diffraction</variable>
            <value>1</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
    </dependencies>    
  </element>  
  <element>
    <tag>checkpropagation</tag>
    <style>checkbox</style>
    <position>770 60</position>
    <text>Adapt propagation</text>
    <variable>handles.Model(md).Input(ad).Propagation</variable>
    <dependencies>
      <dependency>
        <action>enable</action>
        <tags>
          <tag>checkdiffraction</tag>
        </tags>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).Diffraction</variable>
            <value>1</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
    </dependencies>    
  </element>  
</root>
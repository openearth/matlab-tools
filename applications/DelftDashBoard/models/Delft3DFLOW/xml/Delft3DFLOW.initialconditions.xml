<?xml version="1.0"?>
<!-- Written on 25-Mar-2010 19:17:24 using the XML Toolbox for Matlab -->
<root>
  <element>
    <tag>panelinitialconditions</tag>
    <style>panel</style>
    <text>Initial Conditions</text>
    <position>40 10 800 160</position>
  </element>
  <element>
    <tag>selecttype</tag>
    <style>popupmenu</style>
    <text>Type</text>
    <position>150 120 120 20</position>
    <type>string</type>
    <variable>handles.Model(md).Input(ad).initialConditions</variable>
    <list>
      <texts>
        <text>Uniform Values</text>
        <text>Initial Conditions File</text>
        <text>Restart File</text>
        <text>Map File</text>
      </texts>
      <values>
        <value>unif</value>
        <value>ini</value>
        <value>rst</value>
        <value>trim</value>
      </values>
    </list> 
  </element>
  <element>
    <tag>pushselectinifile</tag>
    <style>pushbutton</style>
    <position>280 120 50 20</position>
    <tooltipstring>Select file</tooltipstring>
    <text>File</text>
    <callback>ddb_Delft3DFLOW_initialConditions</callback>
    <option1>selectfile</option1>    
    <dependencies>
      <dependency>
        <action>enable</action>
        <tags>
          <tag>selecttype</tag>
        </tags>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).initialConditions</variable>
            <value>unif</value>
            <operator>ne</operator>
          </check>
        </checks>
      </dependency>
    </dependencies>
  </element>
  <element>
    <tag>editz0</tag>
    <style>edit</style>
    <position>150 90 50 20</position>
    <text>Water Level (m)</text>
    <tooltipstring>Edit initial water level</tooltipstring>
    <variable>handles.Model(md).Input(ad).zeta0</variable>
    <type>real</type>
    <dependencies>
      <dependency>
        <action>enable</action>
        <tags>
          <tag>selecttype</tag>
        </tags>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).initialConditions</variable>
            <value>unif</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
    </dependencies>
  </element>
  <element>
    <tag>editsal0</tag>
    <style>edit</style>
    <position>150 65 50 20</position>
    <text>Salinity (ppt)</text>
    <tooltipstring>Edit initial salinity</tooltipstring>
    <variable>handles.Model(md).Input(ad).salinity.ICConst</variable>
    <type>real</type>
    <dependencies>
      <dependency>
        <action>visible</action>
        <tags>
          <tag>selecttype</tag>
        </tags>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).salinity.include</variable>
            <value>1</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
      <dependency>
        <action>enable</action>
        <tags>
          <tag>selecttype</tag>
        </tags>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).initialConditions</variable>
            <value>unif</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
    </dependencies>
  </element>
  <element>
    <tag>edittem0</tag>
    <style>edit</style>
    <position>150 40 50 20</position>
    <text>Temperature (degC)</text>
    <tooltipstring>Edit initial temperature</tooltipstring>
    <variable>handles.Model(md).Input(ad).temperature.ICConst</variable>
    <type>real</type>
    <dependencies>
      <dependency>
        <action>visible</action>
        <tags>
          <tag>selecttype</tag>
        </tags>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).temperature.include</variable>
            <value>1</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
      <dependency>
        <action>enable</action>
        <tags>
          <tag>selecttype</tag>
        </tags>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).initialConditions</variable>
            <value>unif</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
    </dependencies>
  </element>
  <element>
    <tag>texttracerconc</tag>
    <style>text</style>
    <position>606 136</position>
    <text>kg/m^3</text>
    <dependencies>
      <dependency>
        <action>visible</action>
        <tags>
          <tag>selecttype</tag>
        </tags>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).nrTracers</variable>
            <value>0</value>
            <operator>gt</operator>
          </check>
          <check>
            <variable>handles.Model(md).Input(ad).tracers</variable>
            <value>1</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
      <dependency>
        <action>enable</action>
        <tags>
          <tag>selecttype</tag>
        </tags>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).initialConditions</variable>
            <value>unif</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
    </dependencies>
  </element>
  <element>
    <tag>edittracer1</tag>
    <style>edit</style>
    <position>600 115 50 20</position>
    <text>
      <variable>handles.Model(md).Input(ad).tracer(1).name</variable>
      <type>string</type>
    </text>
    <variable>handles.Model(md).Input(ad).tracer(1).ICConst</variable>
    <type>real</type>
    <dependencies>
      <dependency>
        <action>visible</action>
        <tags>
          <tag>selecttype</tag>
        </tags>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).nrTracers</variable>
            <value>0</value>
            <operator>gt</operator>
          </check>
          <check>
            <variable>handles.Model(md).Input(ad).tracers</variable>
            <value>1</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
      <dependency>
        <action>enable</action>
        <tags>
          <tag>selecttype</tag>
        </tags>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).initialConditions</variable>
            <value>unif</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
    </dependencies>
  </element>
  <element>
    <tag>edittracer2</tag>
    <style>edit</style>
    <position>600 90 50 20</position>
    <text>
      <variable>handles.Model(md).Input(ad).tracer(2).name</variable>
      <type>string</type>
    </text>
    <tooltipstring>Edit initial concentration tracer 2</tooltipstring>
    <variable>handles.Model(md).Input(ad).tracer(2).ICConst</variable>
    <type>real</type>
    <dependencies>
      <dependency>
        <action>visible</action>
        <tags>
          <tag>selecttype</tag>
        </tags>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).nrTracers</variable>
            <value>1</value>
            <operator>gt</operator>
          </check>
          <check>
            <variable>handles.Model(md).Input(ad).tracers</variable>
            <value>1</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
      <dependency>
        <action>enable</action>
        <tags>
          <tag>selecttype</tag>
        </tags>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).initialConditions</variable>
            <value>unif</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
    </dependencies>
  </element>
  <element>
    <tag>edittracer3</tag>
    <style>edit</style>
    <position>600 65 50 20</position>
    <text>
      <variable>handles.Model(md).Input(ad).tracer(3).name</variable>
      <type>string</type>
    </text>
    <tooltipstring>Edit initial concentration tracer 3</tooltipstring>
    <variable>handles.Model(md).Input(ad).tracer(3).ICConst</variable>
    <type>real</type>
    <dependencies>
      <dependency>
        <action>visible</action>
        <tags>
          <tag>selecttype</tag>
        </tags>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).nrTracers</variable>
            <value>2</value>
            <operator>gt</operator>
          </check>
          <check>
            <variable>handles.Model(md).Input(ad).tracers</variable>
            <value>1</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
      <dependency>
        <action>enable</action>
        <tags>
          <tag>selecttype</tag>
        </tags>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).initialConditions</variable>
            <value>unif</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
    </dependencies>
  </element>
  <element>
    <tag>edittracer4</tag>
    <style>edit</style>
    <position>600 40 50 20</position>
    <text>
      <variable>handles.Model(md).Input(ad).tracer(4).name</variable>
      <type>string</type>
    </text>
    <tooltipstring>Edit initial concentration tracer 4</tooltipstring>
    <variable>handles.Model(md).Input(ad).tracer(4).ICConst</variable>
    <type>real</type>
    <dependencies>
      <dependency>
        <action>visible</action>
        <tags>
          <tag>selecttype</tag>
        </tags>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).nrTracers</variable>
            <value>3</value>
            <operator>gt</operator>
          </check>
          <check>
            <variable>handles.Model(md).Input(ad).tracers</variable>
            <value>1</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
      <dependency>
        <action>enable</action>
        <tags>
          <tag>selecttype</tag>
        </tags>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).initialConditions</variable>
            <value>unif</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
    </dependencies>
  </element>
  <element>
    <tag>edittracer5</tag>
    <style>edit</style>
    <position>600 15 50 20</position>
    <text>
      <variable>handles.Model(md).Input(ad).tracer(5).name</variable>
      <type>string</type>
    </text>
    <tooltipstring>Edit initial concentration tracer 5</tooltipstring>
    <variable>handles.Model(md).Input(ad).tracer(5).ICConst</variable>
    <type>real</type>
    <dependencies>
      <dependency>
        <action>visible</action>
        <tags>
          <tag>selecttype</tag>
        </tags>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).nrTracers</variable>
            <value>4</value>
            <operator>gt</operator>
          </check>
          <check>
            <variable>handles.Model(md).Input(ad).tracers</variable>
            <value>1</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
      <dependency>
        <action>enable</action>
        <tags>
          <tag>selecttype</tag>
        </tags>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).initialConditions</variable>
            <value>unif</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
    </dependencies>
  </element>
  <element>
    <tag>textsedconc</tag>
    <style>text</style>
    <position>786 136</position>
    <text>kg/m^3</text>
    <dependencies>
      <dependency>
        <action>visible</action>
        <tags>
          <tag>selecttype</tag>
        </tags>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).nrSediments</variable>
            <value>0</value>
            <operator>gt</operator>
          </check>
          <check>
            <variable>handles.Model(md).Input(ad).sediments.include</variable>
            <value>1</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
      <dependency>
        <action>enable</action>
        <tags>
          <tag>selecttype</tag>
        </tags>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).initialConditions</variable>
            <value>unif</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
    </dependencies>
  </element>
  <element>
    <tag>editsediment1</tag>
    <style>edit</style>
    <position>780 115 50 20</position>
    <text>
      <variable>handles.Model(md).Input(ad).sediment(1).name</variable>
      <type>string</type>
    </text>
    <tooltipstring>Edit initial concentration sediment 1</tooltipstring>
    <variable>handles.Model(md).Input(ad).sediment(1).ICConst</variable>
    <type>real</type>
    <dependencies>
      <dependency>
        <action>visible</action>
        <tags>
          <tag>selecttype</tag>
        </tags>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).nrSediments</variable>
            <value>0</value>
            <operator>gt</operator>
          </check>
          <check>
            <variable>handles.Model(md).Input(ad).sediments.include</variable>
            <value>1</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
      <dependency>
        <action>enable</action>
        <tags>
          <tag>selecttype</tag>
        </tags>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).initialConditions</variable>
            <value>unif</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
    </dependencies>
  </element>
  <element>
    <tag>editsediment2</tag>
    <style>edit</style>
    <position>780 90 50 20</position>
    <text>
      <variable>handles.Model(md).Input(ad).sediment(2).name</variable>
      <type>string</type>
    </text>
    <tooltipstring>Edit initial concentration sediment 2</tooltipstring>
    <variable>handles.Model(md).Input(ad).sediment(2).ICConst</variable>
    <type>real</type>
    <dependencies>
      <dependency>
        <action>visible</action>
        <tags>
          <tag>selecttype</tag>
        </tags>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).nrSediments</variable>
            <value>1</value>
            <operator>gt</operator>
          </check>
          <check>
            <variable>handles.Model(md).Input(ad).sediments.include</variable>
            <value>1</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
      <dependency>
        <action>enable</action>
        <tags>
          <tag>selecttype</tag>
        </tags>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).initialConditions</variable>
            <value>unif</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
    </dependencies>
  </element>
  <element>
    <tag>editsediment3</tag>
    <style>edit</style>
    <position>780 65 50 20</position>
    <text>
      <variable>handles.Model(md).Input(ad).sediment(3).name</variable>
      <type>string</type>
    </text>
    <tooltipstring>Edit initial concentration sediment 3</tooltipstring>
    <variable>handles.Model(md).Input(ad).sediment(3).ICConst</variable>
    <type>real</type>
    <dependencies>
      <dependency>
        <action>visible</action>
        <tags>
          <tag>selecttype</tag>
        </tags>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).nrSediments</variable>
            <value>2</value>
            <operator>gt</operator>
          </check>
          <check>
            <variable>handles.Model(md).Input(ad).sediments.include</variable>
            <value>1</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
      <dependency>
        <action>enable</action>
        <tags>
          <tag>selecttype</tag>
        </tags>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).initialConditions</variable>
            <value>unif</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
    </dependencies>
  </element>
  <element>
    <tag>editsediment4</tag>
    <style>edit</style>
    <position>780 40 50 20</position>
    <text>
      <variable>handles.Model(md).Input(ad).sediment(4).name</variable>
      <type>string</type>
    </text>
    <tooltipstring>Edit initial concentration sediment 4</tooltipstring>
    <variable>handles.Model(md).Input(ad).sediment(4).ICConst</variable>
    <type>real</type>
    <dependencies>
      <dependency>
        <action>visible</action>
        <tags>
          <tag>selecttype</tag>
        </tags>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).nrSediments</variable>
            <value>3</value>
            <operator>gt</operator>
          </check>
          <check>
            <variable>handles.Model(md).Input(ad).sediments.include</variable>
            <value>1</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
      <dependency>
        <action>enable</action>
        <tags>
          <tag>selecttype</tag>
        </tags>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).initialConditions</variable>
            <value>unif</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
    </dependencies>
  </element>
  <element>
    <tag>editsediment5</tag>
    <style>edit</style>
    <position>780 15 50 20</position>
    <text>
      <variable>handles.Model(md).Input(ad).sediment(5).name</variable>
      <type>string</type>
    </text>
    <tooltipstring>Edit initial concentration sediment 5</tooltipstring>
    <variable>handles.Model(md).Input(ad).sediment(4).ICConst</variable>
    <type>real</type>
    <dependencies>
      <dependency>
        <action>visible</action>
        <tags>
          <tag>selecttype</tag>
        </tags>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).nrSediments</variable>
            <value>4</value>
            <operator>gt</operator>
          </check>
          <check>
            <variable>handles.Model(md).Input(ad).sediments.include</variable>
            <value>1</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
      <dependency>
        <action>enable</action>
        <tags>
          <tag>selecttype</tag>
        </tags>
        <checkfor>all</checkfor>
        <checks>
          <check>
            <variable>handles.Model(md).Input(ad).initialConditions</variable>
            <value>unif</value>
            <operator>eq</operator>
          </check>
        </checks>
      </dependency>
    </dependencies>
  </element>
</root>

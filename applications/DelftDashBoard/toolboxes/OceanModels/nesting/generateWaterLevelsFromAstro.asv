function [times,wl]=generateWaterLevelsFromAstro(flow,opt)

t0=flow.startTime;
t1=flow.stopTime;
dt=opt.bctTimeStep;

%flwTmp=flow;
%flwTmp.inputDir=opt.inputDir;
%flwTmp.bndFile=opt.WaterLevel.BC.BndAstroFile;
%flwTmp=readBndFile(flwTmp);
%fname=[Flow.InputDir Flow.WaterLevel.BC.AstroFile];
openBoundaries=delft3dflow_readBndFile(opt.WaterLevel.BC.BndAstroFile);
Flow=ReadBcaFile(Flow,fname);
for k=1:Flow.NrAstronomicComponentSets
    CompSet{k}=Flow.AstronomicComponentSets(k).Name;
end

nr=Flow.NrOpenBoundaries;
for i=1:nr

    ia=strmatch(FlwTmp.OpenBoundaries(i).CompA,CompSet,'exact');
    SetA=Flow.AstronomicComponentSets(ia);
    for j=1:SetA.Nr
        try
        comp{j}=SetA.Component{j};
        catch
            x=1;
        end
        A(j,1)=SetA.Amplitude(j);
        G(j,1)=SetA.Phase(j);
    end
    [prediction,times]=delftPredict2007(comp,A,G,t0,t1,dt/60);
    prediction(end)=prediction(end-1);
    wl(i,1,:)=prediction;
    
    ib=strmatch(FlwTmp.OpenBoundaries(i).CompB,CompSet,'exact');
    SetB=Flow.AstronomicComponentSets(ib);
    for j=1:SetB.Nr
        comp{j}=SetB.Component{j};
        A(j,1)=SetB.Amplitude(j);
        G(j,1)=SetB.Phase(j);
    end
    [prediction,times]=delftPredict2007(comp,A,G,t0,t1,dt/60);
    prediction(end)=prediction(end-1);
    wl(i,2,:)=prediction;
    
end

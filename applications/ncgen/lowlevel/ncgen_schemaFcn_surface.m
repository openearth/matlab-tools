function varargout = ncgen_schemaFcn_surface(OPT)

if nargin == 0 || isempty(OPT)
    % return OPT structure with options specific to this function
    OPT.schema.EPSGcode          = [];   
    OPT.schema.includeLatLon     = true;
    OPT.schema.grid_spacing      = 1;
    OPT.schema.grid_offset       = 0;
    OPT.schema.grid_tilesize     = 500;
    
    OPT.schema.meta              = struct([]);
    
    OPT.schema.x_datatype        = 'double';
    OPT.schema.x_scale_factor    = [];
    OPT.schema.x_add_offset      = [];
    
    OPT.schema.y_datatype        = 'double';
    OPT.schema.y_scale_factor    = [];
    OPT.schema.y_add_offset      = [];
    
    OPT.schema.z_datatype        = 'double';
    OPT.schema.z_scale_factor    = [];
    OPT.schema.z_add_offset      = [];
    
    OPT.schema.time_datatype     = 'double';
    OPT.schema.time_scale_factor = [];
    OPT.schema.time_add_offset   = [];
    OPT.schema.time_units        = sprintf('days since %s +00:00',datestr(0,31));
   
    varargout                    = {OPT.schema};
    return
else
    if datenum(version('-date'), 'mmmm dd, yyyy') < 734729
        % version 2011a and older
        error(nargchk(1,1,nargin))
    else
        % version 2011b and newer
        narginchk(1,1)
    end
end


dimstruct        = nccreateDimstruct('Name','x','Length',OPT.schema.grid_tilesize(1));
dimstruct(end+1) = nccreateDimstruct('Name','y','Length',OPT.schema.grid_tilesize(end));
dimstruct(end+1) = nccreateDimstruct('Name','time','Unlimited',true);
dimstruct(end+1) = nccreateDimstruct('Name','dim16','Length',16);
dimstruct(end+1) = nccreateDimstruct('Name','nSourcefiles','Unlimited',true,'Length',inf);

varstruct        = nccreateVarstruct_standardnames_cf('projection_x_coordinate',...
    'Name','x',...
    'Dimensions',{'x'},...
    'Datatype',OPT.schema.x_datatype,...
    'scale_factor',OPT.schema.x_scale_factor,...
    'add_offset',OPT.schema.x_add_offset);
varstruct(end+1) = nccreateVarstruct_standardnames_cf('projection_y_coordinate',...
    'Name','y',...
    'Dimensions',{'y'},...
    'Datatype',OPT.schema.y_datatype,...
    'scale_factor',OPT.schema.y_scale_factor,...
    'add_offset',OPT.schema.y_add_offset);

if ~isempty(OPT.schema.EPSGcode)
    varstruct(end+1) = nccreateVarstruct_crs(OPT.schema.EPSGcode);
    if OPT.schema.includeLatLon
        varstruct(end+1) = nccreateVarstruct_standardnames_cf('latitude',...
            'Name','lat',...
            'Datatype','int32',...
            'scale_factor',1e-7,...
            'Dimensions',{'x','y'},...
            'DeflateLevel',1);
        varstruct(end+1) = nccreateVarstruct_standardnames_cf('longitude',...
            'Name','lon',...
            'Datatype','int32',...
            'scale_factor',1e-7,...
            'Dimensions',{'x','y'},...
            'DeflateLevel',1);
    end
end

varstruct(end+1) = nccreateVarstruct_standardnames_cf('altitude',...
    'Name','z',...
    'Dimensions',{'x','y','time'},...
    'DeflateLevel',1,...
    'Datatype',OPT.schema.z_datatype,...
    'scale_factor',OPT.schema.z_scale_factor,...
    'add_offset',OPT.schema.z_add_offset,...
    'Attributes',{'grid_mapping','crs'});
varstruct(end+1) = nccreateVarstruct_standardnames_cf('time',...
    'Name','time',...
    'Dimensions',{'time'},...
    'Datatype',OPT.schema.time_datatype,...
    'add_offset',OPT.schema.time_add_offset,...
    'scale_factor',OPT.schema.time_scale_factor,...
    'units',OPT.schema.time_units);
varstruct(end+1) = nccreateVarstruct(...
    'Name','source_file_hash',...
    'Datatype','uint16',...
    'Dimensions',{'dim16','nSourcefiles'},...
    'Attributes',{'definition', 'MD5 hash of source files from which netcdf is generated'});

ncattributes = reshape([fieldnames(OPT.schema.meta)  struct2cell(OPT.schema.meta)]',1,[]);

schema = nccreateSchema(dimstruct,varstruct,...
    'Filename','a','Attributes',ncattributes,'Format','netcdf4');

varargout = {schema};